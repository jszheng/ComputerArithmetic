{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5c01\u9762","text":""},{"location":"BackCover/","title":"\u5c01\u5e95","text":""},{"location":"Front/","title":"Computer Arithmetic","text":"<p>Algorithms and Hardware Designs</p> <p>Second Edition</p> <p>2010</p> <p></p> <p></p> <p>by Behrooz Parhami</p> <p>UCSB</p> <p></p>"},{"location":"Preface_1st/","title":"\u7b2c\u4e00\u7248\u5e8f\u8a00","text":""},{"location":"Preface_1st/#_2","title":"\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u80cc\u666f","text":"<p>\u5728\u8fc7\u53bb20\u5e74\u95f4\uff0c\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u7684\u8fdb\u6b65\u4f7f\u5f97\u6570\u5b57\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u6027\u80fd\u6301\u7eed\u5448\u6307\u6570\u7ea7\u589e\u957f\uff0c\u5c3d\u7ba1\u5728\u7535\u8def\u5c42\u63d0\u9ad8\u901f\u5ea6\u7684\u6280\u672f\u96be\u5ea6\u5728\u4e0d\u65ad\u63d0\u9ad8\u3002\u5982\u679c\u6ca1\u6709\u7406\u8bba\u4e0a\u7684\u6d1e\u5bdf\u529b\u3001\u5b9e\u9a8c\u7814\u7a76\u548c\u5de5\u5177\u6784\u5efa\u7684\u52aa\u529b\uff0c\u8fd9\u79cd\u73b0\u8c61\u7ea7\u7684\u589e\u957f\u901f\u5ea6\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u4e9b\u52aa\u529b\u6709\u52a9\u4e8e\u5c06\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4ece\u4e00\u95e8\u827a\u672f\u8f6c\u53d8\u4e3a\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u5de5\u7a0b\u4e2d\u6700\u91cf\u5316\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u4e14\u9884\u8ba1\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u4e5f\u4f1a\u7ee7\u7eed\u4e0b\u53bb\u3002\u5bf9\u4e0d\u540c\u5f62\u5f0f\u7684\u5e76\u53d1\u6027\u7684\u7406\u89e3\uff0c\u4ee5\u53ca\u5177\u5907\u5408\u7406\u6709\u6548\u6027\u5e76\u4e14\u7528\u6237\u53cb\u597d\u7684\u7f16\u7a0b\u6a21\u578b\u7684\u53d1\u5c55\uff0c\u662f\u8fd9\u4e00\u6210\u529f\u6545\u4e8b\u7684\u5173\u952e\u63a8\u52a8\u56e0\u7d20\u3002</p> <p>\u5904\u7406\u5668\u6027\u80fd\u6210\u672c\u589e\u957f\u80cc\u540e\u7684\u95ee\u9898\u662f\u786c\u4ef6\u548c\u8f6f\u4ef6\u590d\u6742\u6027\u7684\u7a7a\u524d\u589e\u52a0\u3002\u590d\u6742\u5316\u7684\u8d8b\u52bf\u4e0d\u4ec5\u4e0e\u53ef\u6d4b\u8bd5\u6027\u548c\u53ef\u9a8c\u8bc1\u6027\u76f8\u62b5\u89e6\uff0c\u8fd8\u963b\u788d\u4e86\u53ef\u9002\u5e94\u6027\u3001\u6027\u80fd\u8c03\u6574\uff0c\u4ee5\u53ca\u5404\u79cd\u6743\u8861\u7684\u8bc4\u4f30\uff0c\u6240\u6709\u7684\u8fd9\u4e9b\u6700\u7ec8\u5bfc\u81f4\u4e86\u5f00\u53d1\u6210\u672c\u7684\u98d9\u5347\u3002\u5f53\u524d\u548c\u672a\u6765\u7684\u8ba1\u7b97\u673a\u8bbe\u8ba1\u6240\u9762\u4e34\u7684\u4e00\u4e2a\u5173\u952e\u6311\u6218\u662f\uff1a\u9700\u8981\u901a\u8fc7\u53bb\u9664\u4e00\u5c42\u53c8\u4e00\u5c42\u7684\u590d\u6742\u6027\u6765\u626d\u8f6c\u8fd9\u4e00\u8d8b\u52bf\u3002\u5728\u9009\u62e9\u7b80\u6d01\u3001\u7a33\u5065\u3001\u6613\u4e8e\u9a8c\u8bc1\u7684\u8bbe\u8ba1\u540c\u65f6\uff0c\u8fd8\u8981\u7ee7\u7eed\u5c1d\u8bd5\u65b0\u7684\u8bbe\u8ba1\u65b9\u6cd5\u3002\u5e94\u5f53\u4ece\u8f83\u7b80\u5355\u7684\u7535\u8def\u4e2d\u83b7\u5f97\u6027\u80fd\u4e0e\u6613\u7528\u6027\u7684\u597d\u5904\uff0c\u5e76\u80fd\u968f\u65f6\u9002\u5e94\u5e94\u7528\u7684\u9700\u6c42\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u8bbe\u8ba1\u8005\u5bf9\u7528\u6237\u53cb\u597d\u6027\u3001\u7d27\u51d1\u6027\u3001\u7b80\u5355\u6027\u3001\u9ad8\u6027\u80fd\u3001\u4f4e\u6210\u672c\u548c\u529f\u8017\u7684\u8ffd\u6c42\u4e2d\uff0c\u8ba1\u7b97\u673a\u7b97\u672f\u8d77\u5230\u4e86\u5173\u952e\u4f5c\u7528\u3002\u5b83\u662f\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e2d\u6700\u53e4\u8001\u7684\u5b50\u9886\u57df\u4e4b\u4e00\u3002\u65e9\u671f\u6570\u5b57\u8ba1\u7b97\u673a\u7684\u5927\u90e8\u5206\u786c\u4ef6\u5f00\u9500\u90fd\u6765\u81ea\u7d2f\u52a0\u5668\u548c\u5176\u5b83\u7b97\u672f/\u903b\u8f91\u7535\u8def\u4e2d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u4ee3\u8ba1\u7b97\u673a\u8bbe\u8ba1\u8005\u7684\u52a8\u673a\u662f\u5728\u53ef\u80fd\u7684\u8303\u56f4\u5185\u5c3d\u53ef\u80fd\u7b80\u5316\u548c\u5171\u4eab\u786c\u4ef6\uff0c\u5e76\u5728\u63d0\u51fa\u65b9\u6848\u524d\u8fdb\u884c\u8be6\u7ec6\u7684\u6027\u4ef7\u6bd4\u5206\u6790\u3002\u6211\u4eec\u4eca\u5929\u4f7f\u7528\u7684\u8bb8\u591a\u5de7\u5999\u7684\u8bbe\u8ba1\u65b9\u6cd5\u5b9e\u9645\u4e0a\u90fd\u6e90\u81ea\u4e8e30\uff5e50\u5e74\u524d\u7b28\u91cd\u3001\u8017\u7535\u7684\u673a\u5668\u4e2d\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u8ba1\u7b97\u673a\u7b97\u672f\u5982\u4eca\u5df2\u7ecf\u975e\u5e38\u6210\u529f\u4e86\uff0c\u4ee5\u81f3\u4e8e\u6709\u65f6\u4f1a\u53d8\u5f97\u975e\u5e38\u900f\u660e\u3002\u5c31\u590d\u6742\u6027\u800c\u8a00\uff0c\u5982\u4eca\u7684\u7b97\u672f\u7535\u8def\u65e9\u5df2\u4e0d\u518d\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\uff1b\u5bc4\u5b58\u5668\u3001\u5b58\u50a8\u5668\u548c\u7c97\u51fa\u6c14\u7ba1\u7406\u3001\u6307\u4ee4\u53d1\u5c04\u903b\u8f91\u548c\u6d41\u6c34\u7ebf\u63a7\u5236\u903b\u8f91\u624d\u662f\u5f53\u4eca\u5904\u7406\u5668\u82af\u7247\u9762\u79ef\u7684\u4e3b\u8981\u6d88\u8d39\u8005\u3002\u7b97\u672f\u7535\u8def\u7684\u6b63\u786e\u6027\u4e0e\u9ad8\u6027\u80fd\u662f\u4eba\u4eec\u901a\u5e38\u7684\u9884\u671f\uff0c\u50cf1990s\u82f1\u7279\u5c14\u5954\u817e\u7684\u9664\u6cd5\u9519\u8bef\u8fd9\u6837\u7684\u4e8b\u4ef6\u5b9e\u9645\u4e0a\u5f88\u5c11\u53d1\u751f\u3002</p> <p>\u524d\u9762\u6240\u8ff0\u7684\u60c5\u51b5\u6b63\u5728\u8f6c\u53d8\uff0c\u8fd9\u91cc\u6709\u51e0\u4e2a\u539f\u56e0\u3002\u9996\u5148\uff0c\u5728\u6781\u9ad8\u7684\u65f6\u949f\u9891\u7387\u4e0b\uff0c\u7b97\u672f\u7535\u8def\u548c\u5904\u7406\u5668\u5176\u5b83\u90e8\u5206\u95f4\u7684\u63a5\u53e3\u5f00\u59cb\u53d8\u5f97\u975e\u5e38\u5173\u952e\u3002\u7b97\u672f\u5355\u5143\u4e5f\u4e0d\u518d\u80fd\u88ab\u5b64\u7acb\u5730\u8bbe\u8ba1\u548c\u9a8c\u8bc1\u4e86\u3002\u76f8\u53cd\uff0c\u9700\u8981\u8fdb\u884c\u7efc\u5408\u7684\u8bbe\u8ba1\u4e0e\u4f18\u5316\uff0c\u8fd9\u4f7f\u5f97\u5f00\u53d1\u5de5\u4f5c\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u4e14\u6602\u8d35\u3002\u5176\u6b21\uff0c\u8fd8\u8981\u5229\u7528\u65b0\u6280\u672f\u7684\u4f18\u52bf\u4f18\u5316\u7b97\u672f\u7535\u8def\u4ee5\u6ee1\u8db3\u8bbe\u8ba1\u76ee\u6807\uff0c\u5e76\u80fd\u5bb9\u5fcd\u5f31\u70b9\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u9700\u8981\u5bf9\u73b0\u6709\u7684\u8bbe\u8ba1\u6a21\u5f0f\u8fdb\u884c\u91cd\u65b0\u5ba1\u89c6\u3002\u6700\u540e\uff0c\u5c06\u66f4\u9ad8\u7ea7\u522b\u7684\u7b97\u672f\u57fa\u7840\u5355\u5143\u7eb3\u5165\u786c\u4ef6\uff0c\u4f7f\u5f97\u8bbe\u8ba1\u3001\u4f18\u5316\u548c\u9a8c\u8bc1\u5de5\u4f5c\u53d8\u5f97\u9ad8\u5ea6\u590d\u6742\uff0c\u4e14\u76f8\u4e92\u5173\u8054\u3002</p> <p>\u8fd9\u4fbf\u662f\u8ba1\u7b97\u673a\u7b97\u672f\u5728\u5982\u4eca\u4ecd\u5177\u6d3b\u529b\u7684\u539f\u56e0\u3002\u8fd9\u4e2a\u9886\u57df\u7684\u8bbe\u8ba1\u8005\u548c\u7814\u7a76\u4eba\u5458\u4ee5\u60ca\u4eba\u7684\u89c4\u5f8b\u6027\u4ea7\u751f\u4e86\u65b0\u7684\u7ed3\u6784\u3002\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff1a\u5728\u4e0d\u8fdc\u7684\u8fc7\u53bb\uff0c\u6211\u4eec\u66fe\u8ba4\u4e3a\u6211\u4eec\u77e5\u9053\u6240\u6709\u5173\u4e8e\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u7684\u77e5\u8bc6\u3002\u7136\u800c\uff0c\u65b0\u7684\u8bbe\u8ba1\u3001\u6539\u8fdb\u548c\u4f18\u5316\u4ecd\u5728\u4e0d\u65ad\u51fa\u73b0\u3002IEEE 754\u6807\u51c6\u6d6e\u70b9\u683c\u5f0f\u6d88\u9664\u4e86\u8bb8\u591a\u6709\u5173\u6d6e\u70b9\u8ba1\u7b97\u517c\u5bb9\u6027\u4e0e\u8bef\u5dee\u63a7\u5236\u7684\u4f46\u53c8\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u8bb8\u591a\u5bf9\u5927\u4f17\u5e02\u573a\u5177\u6709\u5438\u5f15\u529b\u7684\u65b0\u8bbe\u8ba1\u4e0e\u4ea7\u54c1\u3002\u9274\u4e8e\u8bb8\u591a\u65b0\u5e94\u7528\u573a\u666f\uff08\u5982\u52a0\u5bc6\u3001\u9519\u8bef\u68c0\u6d4b\u548c\u591a\u5a92\u4f53\uff09\u90fd\u5177\u6709\u7b97\u672f\u5bc6\u96c6\u6027\u7684\u7279\u70b9\uff0c\u8ba1\u7b97\u673a\u7b97\u672f\u5728\u672a\u6765\u51e0\u5e74\u4ecd\u5c06\u7ee7\u7eed\u84ec\u52c3\u53d1\u5c55\u3002</p>"},{"location":"Preface_1st/#_3","title":"\u672c\u4e66\u7684\u76ee\u7684\u4e0e\u7ed3\u6784","text":"<p>\u8ba1\u7b97\u673a\u7b97\u672f\u8fd9\u4e00\u9886\u57df\u5df2\u7ecf\u53d1\u5c55\u6210\u719f\uff0c\u5df2\u7ecf\u6709\u5341\u51e0\u7bc7\u6750\u6599\u548c\u53c2\u8003\u4e66\u88ab\u51fa\u7248\u4e86\u3002\u5176\u4e2d\u4e00\u4e9b\u6d89\u53ca\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u4e00\u822c\u4e66\u7c4d\uff08\u76f8\u5bf9\u4e8e\u7279\u6b8a\u5e94\u7528\u6216\u9ad8\u7ea7/\u975e\u5e38\u89c4\u65b9\u6cd5\uff09\u88ab\u5217\u5728\u4e86\u5e8f\u8a00\u7684\u6700\u540e\uff08\u53c2\u8003\u6587\u732e\u7d22\u5f15\u8bf7\u89c1\u539f\u4e66\u5e8f\u8a00\u672b\uff09\u3002\u8fd9\u4e9b\u4e66\u7684\u6bcf\u4e00\u672c\u90fd\u5177\u6709\u72ec\u7279\u7684\u4f18\u52bf\uff0c\u4e14\u5bf9\u8be5\u9886\u57df\u7684\u5f62\u6210\u548c\u53d1\u5c55\u505a\u51fa\u4e86\u8d21\u732e\u3002\u672c\u4e66\uff0c\u300aComputer Arithmetic: Algorithms and Hardware Designs\u300b\u5c31\u662f\u5750\u7740\u591a\u5e74\u6765\u5f00\u53d1\u5e76\u5b8c\u5584\u7684\u8bb2\u4e49\u7684\u4ea7\u7269\u3002\u4ee5\u4e0b\u662f\u672c\u4e66\u4e0e\u6240\u5217\u4e66\u7c4d\u76f8\u6bd4\uff0c\u6700\u91cd\u8981\u7684\u7279\u70b9\uff1a</p> <ol> <li>\u6750\u6599\u7ae0\u8282\u6309\u7167\u8bb2\u5ea7\u7684\u89c4\u6a21\u5212\u5206\uff1a\u5728\u6211\u7684\u6559\u5b66\u65b9\u6848\u4e2d\uff0c\u4e00\u4e2a\u8bb2\u5ea7\u6216\u591a\u6216\u5c11\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u5176\u4e0e\u8fc7\u53bb\u7684\u8bb2\u5ea7\u6709\u8054\u7cfb\uff0c\u4e14\u4f1a\u6307\u51fa\u672a\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6bcf\u4e2a\u8bb2\u5ea7\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u4e3b\u9898\u6216\u6807\u9898\uff0c\u4e14\u5fc5\u987b\u4ece\u52a8\u673a\u5230\u7ec6\u8282\u518d\u5230\u7ed3\u8bba\u3002\u5728\u8bbe\u8ba1\u6587\u672c\u65f6\uff0c\u6211\u52aa\u529b\u5c06\u6750\u6599\u5206\u4e3a\u51e0\u7ae0\uff0c\u6bcf\u7ae0\u90fd\u9002\u5408\u7528\u4e8e\u4e00\u4e2a\u8bb2\u5ea7\uff081\uff5e2\u5c0f\u65f6\uff09\u3002\u7b80\u77ed\u7684\u8bb2\u5ea7\u53ef\u4ee5\u4ec5\u6db5\u76d6\u5176\u4e2d\u524d\u9762\u51e0\u4e2a\u5c0f\u8282\uff0c\u800c\u8f83\u957f\u7684\u8bb2\u5ea7\u5219\u53ef\u5904\u7406\u77e5\u8bc6\u6216\u65b9\u6cd5\u7684\u53d8\u79cd\u3001\u6b21\u8981\u7684\u601d\u60f3\u6216\u63a5\u8fd1\u7ae0\u672b\u65f6\u7684\u9ad8\u7ea7\u6750\u6599\u3002\u4e3a\u4f7f\u7ed3\u6784\u5177\u6709\u5c42\u6b21\u6027\uff08\u800c\u4e0d\u662f\u6241\u5e73\u6216\u7ebf\u6027\u7684\uff09\uff0c\u672c\u4e66\u4e00\u5171\u88ab\u5206\u4e3a\u4e86\u4e03\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u7531\u56db\u7ae0\u7ec4\u6210\uff0c\u6bcf\u7ae0\u5bf9\u5e94\u4e00\u4e2a\u8bb2\u5ea7\uff0c\u6db5\u76d6\u8be5\u9886\u57df\u7684\u4e00\u4e2a\u65b9\u9762\uff08\u89c1\u56feP.1\uff0c\u5728\u672c\u6587\u540e\u9762\u8bf7\u5f80\u4e0b\u7ffb\uff09\u3002</li> <li>\u5f3a\u8c03\u57fa\u7840\u7406\u8bba\u4e0e\u786c\u4ef6\u8bbe\u8ba1\uff1a\u5904\u7406\u590d\u6742\u95ee\u9898\u7684\u80fd\u529b\u65e2\u9700\u8981\u5305\u62ec\u8ba1\u7b97\u673a\u7b97\u672f\u7406\u8bba\u57fa\u7840\u7684\u6df1\u523b\u7406\u89e3\uff0c\u4e5f\u9700\u8981\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u7406\u8bba\u7684\u8bbe\u8ba1\u5b9e\u4f8b\u3002\u8fd9\u4e9b\u8bbe\u8ba1\u4e5f\u540c\u65f6\u4e3a\u7efc\u5408\u63d0\u4f9b\u4e86\u6784\u5efa\u5757\uff0c\u5e76\u5728 \u6210\u672c-\u6027\u80fd \u6bd4\u8f83\u65b9\u9762\u63d0\u4f9b\u4e86\u53c2\u8003\u70b9\u3002\u8fd9\u79cd\u89c2\u70b9\u53cd\u6620\u5728\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5bf9\u5197\u4f59\u6570\u5b57\u8868\u793a\u548c\u76f8\u5173\u7b97\u672f\u7684\u8be6\u7ec6\u4e86\u89e3\uff08\u7b2c3\u7ae0\uff09\uff0c\u53ef\u4ee5\u4f7f\u6211\u4eec\u5bf9\u540e\u9762\u5404\u79cd\u4e58\u6cd5\u5668\u8bbe\u8ba1\u548c\u5b9e\u65f6\u7b97\u672f\u5f97\u5230\u66f4\u597d\u7684\u7406\u89e3\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u89c1\u4e8e\u7b2c22\u7ae0\uff0c\u5176\u4ece\u66f4\u76f4\u89c2\u7684\u51e0\u4f55\u5b66\u89d2\u5ea6\u4ecb\u7ecd\u4e86\u5750\u6807\u65cb\u8f6c\u6570\u5b57\u8ba1\u7b97\u673a\uff0c\u6216\u8005CORDIC\u7b97\u6cd5\u3002</li> <li>\u5c06\u8ba1\u7b97\u673a\u7b97\u672f\u4e0e\u8ba1\u7b97\u673a\u5176\u5b83\u5b50\u9886\u57df\u8054\u7cfb\uff1a\u8ba1\u7b97\u673a\u7b97\u672f\u5e38\u53d7\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u5176\u5b83\u5b50\u9886\u57df\u7684\u5b57\u6837\uff0c\u540c\u65f6\u4e5f\u80fd\u53cd\u8fc7\u6765\u6ecb\u517b\u8fd9\u4e9b\u9886\u57df\u3002\u8fd9\u79cd\u8054\u7cfb\u7684\u4f8b\u5b50\u6bd4\u6bd4\u7686\u662f\u3002\u4f8b\u5982\u5bf9\u4e8e\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u610f\u8bc6\u5230\u5176\u8fdb\u4f4d\u8ba1\u7b97\u5b9e\u9645\u4e0a\u5c31\u662f\u5e76\u884c\u524d\u7f00\u8ba1\u7b97\u7684\u4e00\u4e2a\u7279\u4f8b\uff0c\u800c\u5e76\u884c\u524d\u7f00\u8ba1\u7b97\u5df2\u7ecf\u88ab\u5e76\u884c\u8ba1\u7b97\u7684\u7814\u7a76\u8005\u505a\u51fa\u4e86\u5e7f\u6cdb\u5730\u7814\u7a76\u3002\u795e\u7ecf\u7f51\u7edc\u7684\u7b97\u672f\u5219\u662f\u4e00\u4e2a\u4ecd\u5728\u63a2\u7d22\u7684\u9886\u57df\u3002\u5269\u4f59\u6570\u7cfb\u7edf\uff08residue number system\uff09\u4e3a\u590d\u6742\u6027\u7406\u8bba\u548c\u9ad8\u901f\u7b97\u672f\u7684\u6781\u9650\u611f\u5174\u8da3\u7684\u7814\u7a76\u5458\uff0c\u4ee5\u53ca\u5bb9\u9519\u6570\u5b57\u7cfb\u7edf\u7684\u8bbe\u8ba1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9d\u8d35\u7684\u5de5\u5177\u3002</li> <li>\u5e7f\u6cdb\u6db5\u76d6\u4e86\u91cd\u8981\u4e3b\u9898\uff1a\u672c\u4e66\u51e0\u4e4e\u6db5\u76d6\u4e86\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u6240\u6709\u91cd\u8981\u7b97\u6cd5\u548c\u786c\u4ef6\u8bbe\u8ba1\u4e3b\u9898\uff0c\u4ece\u800c\u4e3a\u8be5\u9886\u57df\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e73\u8861\u4e14\u5b8c\u6574\u7684\u89c6\u89d2\u3002\u6db5\u76d6\u5185\u5bb9\u5305\u62ec\u975e\u5e38\u89c4\u6570\u5b57\u8868\u793a\u65b9\u6cd5\uff083,4\u7ae0\uff09\u3001\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u67e5\u627e\u8868\u7b97\u672f\uff0824\u7ae0\uff09\u3001\u5bb9\u9519\u548c\u53ef\u9a8c\u8bc1\u7b97\u672f\uff0819,20\u7ae0\uff09\u3001\u4ee5\u53ca\u7b2c\u4e03\u90e8\u5206\uff0825\uff5e28\u7ae0\uff09\u7684\u4e3b\u9898\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5728\u5176\u5b83\u6559\u6750\u4e2d\u5e76\u6ca1\u6709\u5168\u90e8\u51fa\u73b0\u3002</li> <li>\u5168\u4e66\u91c7\u7528\uff0c\u5e76\u5c3d\u53ef\u80fd\u5730\u4f7f\u7528\u7edf\u4e00\u4e14\u4e00\u81f4\u7684\u7b26\u53f7\u4e0e\u672f\u8bed\uff1a\u4f8b\u5982\uff0c\u672c\u4e66\u4e2d \\(r\\)r \u603b\u662f\u4ee3\u8868\u6570\u5b57\u8868\u793a\u7684\u57fa\u6570\uff08radix\uff09\uff0c\u6216\u8005\u5904\u7f5a\u548c\u5e73\u65b9\u6839\u4e2d\u7684\u4f59\u6570\u3002\u867d\u7136\u5176\u5b83\u4f5c\u8005\u5728\u4ed6\u4eec\u6587\u7ae0\u7684\u57fa\u672c\u90e8\u5206\u4e2d\u4e5f\u90fd\u57fa\u672c\u8fd9\u6837\u505a\u4e86\uff0c\u4f46\u8bb8\u591a\u4eba\u4ecd\u503e\u5411\u4e8e\u5728\u9ad8\u7ea7\u7814\u7a76\u4e3b\u9898\u4e2d\u7b80\u5355\u5730\u501f\u7528\u53c2\u8003\u8d44\u6599\u4e2d\u7684\u7b26\u53f7\u548c\u672f\u8bed\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u597d\u5904\u662f\u4f7f\u5f97\u539f\u4e66\u548c\u53c2\u8003\u8d44\u6599\u95f4\u7684\u8fc7\u5ea6\u66f4\u5bb9\u6613\uff0c\u4f46\u5bf9\u5927\u591a\u6570\u5b66\u751f\u6765\u8bf4\uff0c\u8fd9\u5b8c\u5168\u662f\u4e00\u79cd\u8ff7\u60d1\uff0c\u4ed6\u4eec\u4f9d\u8d56\u539f\u4e66\uff0c\u9664\u975e\u5199\u8bba\u6587\uff0c\u5e76\u4e0d\u4f1a\u53bb\u53c2\u8003\u539f\u59cb\u53c2\u8003\u8d44\u6599\u3002</li> </ol>"},{"location":"Preface_1st/#_4","title":"\u4e3b\u9898\u6458\u8981","text":"<p>\u672c\u4e66\u5305\u62ec\u4e03\u4e2a\u90e8\u5206\u6bcf\u90e8\u5206\u7531\u56db\u7ae0\u7ec4\u6210\uff0c\u5b83\u4eec\u7684\u5199\u4f5c\u52a8\u673a\u5206\u522b\u5982\u4e0b\uff1a</p> <ol> <li>\u7b2c\u4e00\u90e8\u5206\uff1a\u63d0\u4f9b\u4e00\u4e2a\u53f0\u9636\uff0c\u4ee5\u8ba9\u6211\u4eec\u9886\u7565\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\uff0c\u5e76\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5b9a\u70b9\u6570\u7684\u5404\u79cd\u8868\u793a\u65b9\u6cd5\u3002\u5305\u62ec\u5bf9\u6709\u7b26\u53f7\u6570\u3001\u5197\u4f59\u6570\u8868\u793a\u3001\u5269\u4f59\u6570\u8868\u793a\u7684\u8be6\u7ec6\u8ba8\u8bba\u3002</li> <li>\u7b2c\u4e8c\u90e8\u5206\uff1a\u5305\u62ec\u52a0\u6cd5\u548c\u51cf\u6cd5\uff0c\u5b83\u4eec\u6784\u6210\u4e86\u6700\u57fa\u672c\u7684\u7b97\u672f\u6784\u5efa\uff0c\u5e38\u7528\u4e8e\u5b9e\u73b0\u5176\u5b83\u7b97\u672f\u8fd0\u7b97\u3002\u8ba8\u8bba\u5185\u5bb9\u5305\u62ec\u5e38\u6570\u7684\u52a0\u6cd5\uff08\u8ba1\u6570\u5668\uff09\uff0c\u9ad8\u901f\u52a0\u6cd5\u5668\u7684\u5404\u79cd\u8bbe\u8ba1\uff0c\u4ee5\u53ca\u591a\u64cd\u4f5c\u6570\u52a0\u6cd5\u5668\u3002</li> <li>\u7b2c\u4e09\u90e8\u5206\uff1a\u8fd9\u90e8\u5206\u4e13\u95e8\u8ba8\u8bba\u4e58\u6cd5\uff0c\u4ece\u57fa\u672c\u7684\u79fb\u4f4d/\u52a0\u6cd5\u7b97\u6cd5\u5f00\u59cb\uff0c\u5230\u9ad8\u57fa\u3001\u6811\u5f62\u3001\u9635\u5217\u3001\u4f4d\u4e32\u884c\u3001\u6a21\u4e58\u6cd5\u548c\u5176\u5b83\u5404\u79cd\u4e58\u6cd5\uff0c\u6b64\u5916\u8fd8\u8ba8\u8bba\u4e86\u5e73\u65b9\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u3002</li> <li>\u7b2c\u56db\u90e8\u5206\uff1a\u5305\u62ec\u9664\u6cd5\u7b97\u6cd5\u53ca\u5176\u786c\u4ef6\u5b9e\u73b0\uff0c\u4ece\u6700\u57fa\u672c\u7684\u79fb\u4f4d/\u51cf\u6cd5\u7b97\u6cd5\u5f00\u59cb\uff0c\u5230\u9ad8\u57fa\u3001\u9884\u7f29\u653e\u3001\u6a21\u9664\u6cd5\u3001\u9635\u5217\u3001\u6536\u655b\u9664\u6cd5\u3002</li> <li>\u7b2c\u4e94\u90e8\u5206\uff1a\u6d89\u53ca\u5b9e\u6570\u7b97\u672f\uff0c\u5305\u62ec\u8868\u793a\u5b9e\u6570\u7684\u5404\u79cd\u65b9\u6cd5\u3001\u6d6e\u70b9\u7b97\u672f\u3001\u8868\u793a\u4e0e\u8ba1\u7b97\u4e2d\u7684\u8bef\u5dee\uff0c\u4ee5\u53ca\u9ad8\u7cbe\u5ea6\u548c\u53ef\u9a8c\u8bc1\u7b97\u672f\u3002</li> <li>\u7b2c\u516d\u90e8\u5206\uff1a\u6d89\u53ca\u51fd\u6570\u6c42\u503c\uff0c\u4ece\u5e73\u65b9\u6839\u6c42\u503c\u5f00\u59cb\uff0c\u7136\u540e\u662fCORDIC\u7b97\u6cd5\uff0c\u63a5\u7740\u662f\u4e00\u822c\u7684\u6536\u655b\u548c\u8fd1\u4f3c\u65b9\u6cd5\uff0c\u5305\u62ec\u57fa\u4e8e\u67e5\u627e\u8868\u7684\u65b9\u6cd5\u3002</li> <li>\u7b2c\u4e03\u90e8\u5206\uff1a\u5e7f\u6cdb\u5730\u8ba8\u8bba\u4e86\u8bbe\u8ba1\u548c\u5b9e\u73b0\u65b9\u9762\u7684\u4e3b\u9898\uff0c\u5305\u62ec\u6d41\u6c34\u7ebf\u3001\u4f4e\u529f\u8017\u548c\u5bb9\u9519\u7b97\u672f\u3002\u8fd9\u90e8\u5206\u7684\u6700\u540e\u4e00\u7ae0\u8fd8\u63d0\u4f9b\u4e86\u5386\u53f2\u89d2\u5ea6\u548c\u5b9e\u9645\u8ba1\u7b97\u673a\u4e2d\u7b97\u672f\u5355\u5143\u7684\u4f8b\u5b50\u3002</li> </ol>"},{"location":"Preface_1st/#_5","title":"\u672c\u4e66\u7684\u9605\u8bfb\u6307\u5357","text":"<p>\u5bf9\u4e8e\u6559\u5b66\u4f7f\u7528\uff0c\u672c\u4e66\u7684\u6bcf\u7ae0\u4e3b\u9898\u90fd\u53ef\u57281\uff5e2\u5c0f\u65f6\u7684\u8bb2\u5ea7\u4e2d\u6db5\u76d6\u3002\u5728\u4f5c\u8005\u81ea\u5df1\u7684\u6559\u5b66\u4e2d\uff0c\u6bcf\u7ae0\u5206\u522b\u88ab\u7528\u4e8e1.5\u5c0f\u65f6\u7684\u8bb2\u5ea7\uff0c\u6bcf\u54682\u6b21\uff0c\u4e3a\u671f10\u8f74\uff0c\u4e14\u7701\u7565\u6216\u5408\u5e76\u4e86\u90e8\u5206\u7ae0\u8282\uff0c\u4ee5\u4fbf\u5c06\u6750\u6599\u7eb3\u516518\uff5e20\u6b21\u8bb2\u5ea7\u3002\u4f46\u672c\u6587\u7684\u6a21\u5757\u5316\u7ed3\u6784\u4e5f\u9002\u7528\u4e8e\u5176\u5b83\u8bb2\u5ea7\u5f62\u5f0f\u3001\u81ea\u5b66\u6216\u4ece\u4e1a\u4eba\u5458\u5bf9\u8be5\u9886\u57df\u7684\u56de\u987e\u3002\u5728\u540e\u4e24\u79cd\u60c5\u51b5\uff0c\u8bfb\u8005\u53ef\u628a\u6bcf\u7ae0\u770b\u4f5c\u662f\u4e00\u4e2a\u5b66\u4e60\u5355\u5143\uff08\u6bd4\u5982\u4e00\u5468\uff09\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u8bb2\u5ea7\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8bfb\u8005\u8fdb\u5165\u4e0b\u4e00\u7ae0\u524d\uff0c\u6bcf\u7ae0\u7684\u6240\u6709\u4e3b\u9898\u90fd\u5e94\u88ab\u8986\u76d6\u3002\u5728\u6388\u8bfe\u65f6\u95f4\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e9b\u4f4d\u4e8e\u7ae0\u8282\u672b\u5c3e\u7684\u5c0f\u8282\u53ef\u4ee5\u88ab\u7701\u7565\uff0c\u6216\u8005\u4ec5\u4ecb\u7ecd\u52a8\u673a\u4e0e\u5173\u952e\u7ed3\u679c\u3002</p> <p>\u6bcf\u7ae0\u90fd\u63d0\u4f9b\u4e86\u4e0d\u540c\u590d\u6742\u7a0b\u5ea6\u7684\u95ee\u9898\uff0c\u4ece\u7b80\u5355\u5730\u6570\u5b57\u4f8b\u5b50\u6216\u8054\u7cfb\u5230\u8981\u6c42\u66f4\u9ad8\u7684\u7814\u7a76\u6216\u5c0f\u578b\u9879\u76ee\u3002\u8fd9\u4e9b\u95ee\u9898\u662f\u672c\u4e66\u4e0d\u53ef\u5206\u5272\u7684\u4e00\u90e8\u5206\uff1a\u5b83\u4eec\u4e0d\u662f\u4e3a\u4e86\u4f7f\u672c\u4e66\u5728\u4f7f\u7528\u65f6\u66f4\u5177\u5438\u5f15\u529b\u800c\u4e8b\u540e\u6dfb\u52a0\u7684\u3002\u5168\u4e66\u5305\u62ec464\u4e2a\u95ee\u9898\uff08\u6bcf\u7ae015\uff5e18\u4e2a\uff09\u3002\u5047\u8bbe\u6bcf\u5468\u6709\u4e24\u6b21\u8bb2\u5ea7\uff0c\u5219\u53ef\u6bcf\u5468\u6216\u6bcf\u4e24\u5468\u5e03\u7f6e\u4e00\u6b21\u4f5c\u4e1a\uff0c\u6bcf\u6b21\u4f5c\u4e1a\u90fd\u4ee5\u76f8\u5e94\u7684\u4e00\u534a\uff082\u7ae0\uff09\u6216\u5168\u90e8\uff084\u7ae0\uff09\u90e8\u5206\u7684\u5177\u4f53\u5185\u5bb9\u4f5c\u4e3a\u6807\u9898\u3002</p> <p>\u8fd9\u91cc\u4e5f\u4e3a\u6559\u5e08\u63d0\u4f9b\u89e3\u7b54\u624b\u518c\u3002\u4f5c\u8005\u5728UCSB\u7684ECE 252B\u8bfe\u7a0b\u7684\u8be6\u7ec6\u6559\u5b66\u5927\u7eb2\u53ef\u5728\u4e0b\u7f51\u5740\u627e\u5230\uff1a</p> <p>http://www.ece.ucsb.edu/~parhami/ece_252b.htm</p> <p>\u4e00\u4e2a\u7528\u4e8e\u5bf9\u5404\u79cd\u7b97\u672f\u7b97\u6cd5\u8fdb\u884c\u6570\u503c\u5b9e\u9a8c\u7684\u6a21\u62df\u5668\u5219\u53ef\u5728\u4e0b\u7f51\u5740\u627e\u5230\uff1a</p> <p>http://www.ecs.umass.edu/ece/koren/arith/simulator/</p> <p>\u7531Israel Koren\u6559\u6388\u63d0\u4f9b\u3002</p> <p>\u6bcf\u7ae0\u672b\u5c3e\u90fd\u5217\u51fa\u4e86\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u7ecf\u5178\u8bba\u6587\u3001\u5173\u952e\u8bbe\u8ba1\u601d\u60f3\u548c\u91cd\u8981\u7684\u6700\u65b0\u7814\u7a76\u8d21\u732e\u7684\u53c2\u8003\u6587\u732e\u3002\u8fd9\u4e9b\u53c2\u8003\u6587\u732e\u4e3a\u6df1\u5165\u7814\u7a76\u6216\u5b66\u671f\u8bba\u6587\u6216\u8005\u9879\u76ee\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u4e03\u70b9\u3002\u5927\u91cf\u7684\u7ecf\u5178\u8bba\u6587\u548c\u8ba1\u7b97\u673a\u7b97\u672f\u4e2d\u7684\u91cd\u8981\u8d21\u732e\u5df2\u5728\u4e24\u5377\u4e2d\u91cd\u5370[Swar90]\u3002</p> <p>\u8ba1\u7b97\u673a\u7b97\u672f\u9886\u57df\u7684\u65b0\u60f3\u6cd5\u4f1a\u51fa\u73b0\u5728\u88ab\u79f0\u4e3a ARITH-n \u7684\u4f1a\u8bae\u4e2d\uff0c\u4e24\u5e74\u4e00\u6b21\uff0c\u5728\u5947\u6570\u5e74\u77e9\u5f62[ARIT]\u3002\u5176\u5b83\u4f1a\u8bae\u5305\u62ec\uff1a</p> <ul> <li>Asilomar Conference on Signals, Systems, and Computers [Asil]</li> <li>International Conference on Circuits and Systems [ICCS]</li> <li>Midwest Symposium on Circuits and Systems [MSCS]</li> <li>International Conference on Computer Design [ICCD]</li> </ul> <p>\u76f8\u5173\u671f\u520a\u5305\u62ecIEEE Transactions on Computers[TrCo]\uff0c\u7279\u522b\u662f\u5176\u4e2d\u6709\u5173\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u671f\u520a\uff1a</p> <ul> <li>IEEE Transactions on Circuits and Systems[TrCS]</li> <li>Computers &amp; Mathematics with Applications[CoMa]</li> <li>IET Circuits, Devices &amp; Systems[CDS], IET Computers &amp; Digital Techniques[CDT]</li> <li>IEEE Transactions on VLSI Systems[TrVL]</li> <li>Journal of VLSI Signal Processing [JVSP]</li> </ul>"},{"location":"Preface_2nd/","title":"\u7b2c\u4e8c\u7248\u5e8f\u8a00","text":"<p>\u81ea\u300aCOMPUTER ARITHMETIC : Algorithms and Hardware Designs\u300b\u7b2c\u4e00\u7248\u51fa\u7248\u4ee5\u6765\uff0c\u5df2\u7ecf\u8fc7\u53bb\u4e86\u5341\u5e74\u3002\u5c3d\u7ba1\u8fc7\u53bb\u5341\u5e74\u7b97\u672f\u7b97\u6cd5\u548c\u5b9e\u73b0\u6280\u672f\u5728\u4e0d\u65ad\u5730\u8fdb\u6b65\uff0c\u4f46\u8be5\u4e66\u7684\u9876\u5c42\u8bbe\u8ba1\u4ecd\u7136\u5f88\u5408\u7406\u3002\u56e0\u6b64\u9664\u4e86\u5305\u62ec\u4e00\u4e2a\u6709\u5173\u53ef\u91cd\u6784\u7b97\u672f\u7684\u65b0\u7ae0\u8282\u5916\uff0c\u56feP.1\u4e2d\u63cf\u8ff0\u7684\u90e8\u5206\uff08Part\uff09\u548c\u7ae0\u8282\u5c06\u5728\u7b2c\u4e8c\u7248\u4fdd\u6301\u4e0d\u53d8\u3002\u65b0\u7684\u4e00\u7ae0\u53d6\u4ee3\u4e86\u539f\u5148\u7684\u7b2c28\u7ae0\uff0c\u5176\u539f\u5148\u5185\u5bb9\u88ab\u5b89\u6392\u5230\u4e86\u9644\u9875\u4e2d\u3002\u4f5c\u8005\u5c42\u8003\u8651\u6dfb\u52a0\u4e00\u4e2a\u9644\u5f55\uff0c\u4ee5\u5217\u51fa\u7f51\u7ad9\u548c\u5176\u5b83\u4e92\u8054\u7f51\u8d44\u6e90\uff0c\u4ee5\u4f9b\u8fdb\u4e00\u6b65\u5b66\u4e60\u3002\u4f46\u4e92\u8054\u7f51\u8d44\u6e90\u7684\u4f4d\u7f6e\u548c\u5185\u5bb9\u662f\u9ad8\u5ea6\u52a8\u6001\u7684\uff0c\u56e0\u6b64\u4f5c\u8005\u51b3\u5b9a\u5c06\u8fd9\u4e9b\u4fe1\u606f\u653e\u5728\u4f5c\u8005\u4e3a\u672c\u4e66\u5efa\u7acb\u7684\u914d\u5957\u7f51\u7ad9\u4e0a\uff0c\u53ef\u901a\u8fc7\u4ed6\u7684\u4e2a\u4eba\u7f51\u7ad9\u8bbf\u95ee\uff1a</p> <p>http://www.ece.ucsb.edu/~parhami/</p> <p>\u4e4b\u6240\u4ee5\u6dfb\u52a0\u6709\u5173\u53ef\u91cd\u6784\u7b97\u672f\u7684\u65b0\u7ae0\u8282\uff0c\u662f\u56e0\u4e3a\u73b0\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u7b97\u672f\u529f\u80fd\u662f\u5728FPGA\u6216\u7c7bFPGA\u7684\u53ef\u914d\u7f6e\u903b\u8f91\u5668\u4ef6\u4e0a\u5b9e\u73b0\u7684\u3002\u8fd9\u7c7b\u65b9\u6cd5\u5bf9\u4e8e\u65b0\u8bbe\u8ba1\u7684\u539f\u578b\u5f00\u53d1\u3001\u5c0f\u6279\u91cf\u6216\u72ec\u4e00\u65e0\u4e8c\u7684\u7cfb\u7edf\uff0c\u6216\u8005\u9700\u8981\u5728\u73b0\u573a\u5347\u7ea7\u66f4\u65b0\uff0c\u5feb\u901f\u53d1\u5c55\u7684\u4ea7\u54c1\uff0c\u90fd\u662f\u975e\u5e38\u5177\u6709\u5438\u5f15\u529b\u7684\u3002\u56e0\u6b64\u63cf\u8ff0\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u88ab\u8ba4\u4e3a\u5408\u7406\u7684\u8bbe\u8ba1\u4ee5\u53ca\u8bbe\u8ba1\u7b56\u7565\u4e5f\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u65b0\u6750\u6599\u4e0e\u7b2c\u4e03\u90e8\u5206\u7684\u5176\u5b83\u4e09\u7ae0\u80fd\u5f88\u597d\u5730\u878d\u5408\u5728\u4e00\u8d77\uff0c\u6240\u6709\u7684\u8fd9\u4e9b\u90fd\u662f\u6709\u5173\u5b9e\u73b0\uff08implement\uff09\u7684\u4e3b\u9898\u3002\u65b0\u7684\u7b2c28\u7ae0\u6d89\u53ca\u7684\u4f8b\u5b50\u5305\u62ec\u57fa\u4e8e\u67e5\u627e\u8868\u7684\u51fd\u6570\u6c42\u503c\uff0c\u4ee5\u53caFPGA\u4e0a\u7684\u51e0\u4e2a\u52a0\u6cd5\u5668\u548c\u4e58\u6cd5\u5668\u8bbe\u8ba1\u3002</p> <p>\u7b2c\u4e8c\u7248\u4e5f\u8fdb\u884c\u4e86\u4e00\u4e9b\u6269\u5145\u3001\u6539\u8fdb\u3001\u6f84\u6e05\u548c\u66f4\u6b63\u3002\u8bb8\u591a\u8282\u90fd\u65b0\u589e\u4e86\u6750\u6599\uff0c\u4ee5\u53cd\u6620\u65b0\u7684\u60f3\u6cd5\u4e0e\u53d1\u5c55\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u65e7\u7684\u5c0f\u7ed3\u88ab\u5408\u5e76\uff0c\u5e76\u4e3a\u65b0\u7684\u60f3\u6cd5\u6216\u8bbe\u8ba1\u521b\u5efa\u4e86\u65b0\u7684\u5c0f\u8282\u3002\u5728\u7b2c\u4e8c\u7248\u4e2d\uff0c\u65b0\u7684\u5408\u6269\u5145\u7684\u4e3b\u9898\u4ee5\u7ae0\u8282\u4f4d\u957f\u5ea6\u8fdb\u884c\u4e86\u5904\u7406\uff0c\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff08\u62ec\u53f7\u5185\u4e3a\u7ae0\u8282\u7f16\u53f7\uff09\uff1a</p> <ul> <li>\u6a21\u4e8c\u64cd\u4f5c\u6570\u548c\u591a\u64cd\u4f5c\u6570\u52a0\u6cd5\u5668\uff087.6, 8.6\uff09</li> <li>\u622a\u65ad\u6811\u548c\u9635\u5217\u4e58\u6cd5\u5668\uff0811.4\uff09</li> <li>\u91cd\u53e0\u5546\u4f4d\u9009\u62e9\uff0815.2\uff09</li> <li>\u8499\u54e5\u9a6c\u5229\u6a21\u4e58\u6cd5/\u7ea6\u5316\uff0815.4\uff09</li> <li>\u4f5c\u4e3a\u9664\u6cd5\u7279\u6b8a\u60c5\u51b5\u7684\u5012\u6570\uff0815.5\uff09</li> <li>\u6d6e\u70b9FMA\u5355\u5143\uff08fused-multiply-add\uff09\uff0818.5\uff09</li> <li>\u533a\u95f4\u7b97\u6570\uff0c\u5305\u62ec\u533a\u95f4\u725b\u987f\u8fed\u4ee3\u6cd5\uff0820.6\uff09</li> <li>bipartite table\u548cmultipartie table\u65b9\u6cd5\uff0824.6\uff09</li> </ul> <p>\u6b64\u5916\u8fd8\u5f15\u5165\u4e86\u65b0\u7684\u7ae0\u672b\u95ee\u9898\uff0c\u4f7f\u5f97\u95ee\u9898\u7684\u603b\u6570\u8fbe\u5230\u4e86718\u4e2a\u3002\u4f5c\u8005\u6ca1\u5728\u8fd9\u7bc7\u5e8f\u8a00\u4e2d\u52a0\u5165\u65b0\u7684\u4e00\u822c\u53c2\u8003\u8d44\u6599\uff0c\u800c\u662f\u8c8c\u7f8e\u5730\u66f4\u65b0\u548c\u62d3\u5c55\u4e86\u7b2c\u4e00\u7248\u5e8f\u8a00\u672b\u5c3e\u7684\u53c2\u8003\u8d44\u6599\u6e05\u5355\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u4e00\u4e2a\u5355\u4e00\u7684\u7efc\u5408\u6e05\u5355\u3002</p> <p>\u4e00\u5982\u65e2\u5f80\uff0c\u4f5c\u8005\u6b22\u8fce\u5927\u5bb6\u5c31\u53d1\u73b0\u7684\u9519\u8bef\u3001\u9700\u8fdb\u4e00\u6b65\u6f84\u6e05\u7684\u4e3b\u9898\u3001\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u4ee5\u53ca\u5173\u4e8e\u65b0\u4e3b\u9898\u6216\u7ec3\u4e60\u7684\u60f3\u6cd5\u8fdb\u884c\u4ea4\u6d41</p> <p>Behrooz Parhami</p> <p>August 2009, Santa Barbara, CA</p>"},{"location":"Part_01/","title":"\u6570\u5b57\u7684\u8868\u793a\u65b9\u6cd5","text":"<p>NUMBER REPRESENTATION</p> <p>\u201cMathematics, like the Nile, begins in minuteness, but ends in magnificence.\u201d    \u2014 CHARLES CALEB COLTON</p> <p>\u201c\u6570\u5b66\u5c31\u50cf\u5c3c\u7f57\u6cb3\u4e00\u6837\uff0c\u59cb\u4e8e\u5fae\u5c0f\uff0c\u7ec8\u4e8e\u4f1f\u5927\u3002\u201d  \u2014 \u67e5\u5c14\u65af\u00b7\u5361\u83b1\u00b7\u4f2f\u00b7\u79d1\u5c14\u987f</p> <p>\u201cOf all the great things that are found among us the existence of nothing is the greatest.\u201d \u2014 LEONARDO DAVINCI</p> <p>\u201c\u5728\u6211\u4eec\u53d1\u73b0\u7684\u4f1f\u5927\u4e8b\u7269\u4e2d\uff0c\u201c\u65e0\u201d\u7684\u5b58\u5728\u662f\u6700\u4f1f\u5927\u7684\u3002\u201d  \u2014 \u83b1\u6602\u7eb3\u591a\u00b7\u8fbe\u6587\u897f</p> <p>NUMBER REPRESENTATION IS ARGUABLY THE MOST  IMPORTANT TOPIC IN COMPUTER arithmetic. In justifying this claim, it suffices to note that several important classes of number representations were discovered, or rescued from obscurity, by computer designers in their quest for simpler and faster circuits. Furthermore, the choice of number representation affects the implementation cost and delay of all arithmetic operations. We thus begin our study of computer arithmetic by reviewing conventional and exotic representation methods for integers. Conventional methods are of course used extensively. Some of the unconventional methods have been applied to special-purpose digital systems or in the intermediate steps of arithmetic hardware implementations where they are often invisible to computer users. This part consists of the following four chapters:</p> <p>\u6570\u5b57\u8868\u793a\u53ef\u4ee5\u8bf4\u662f\u8ba1\u7b97\u673a\u7b97\u672f\u4e2d\u6700\u91cd\u8981\u7684\u4e3b\u9898\u3002 \u4e3a\u4e86\u8bc1\u660e\u8fd9\u4e00\u8bf4\u6cd5\u7684\u5408\u7406\u6027\uff0c\u53ea\u9700\u6307\u51fa\u51e0\u7c7b\u91cd\u8981\u7684\u6570\u5b57\u8868\u793a\u5f62\u5f0f\u662f\u7531\u8ba1\u7b97\u673a\u8bbe\u8ba1\u8005\u5728\u5bfb\u6c42\u66f4\u7b80\u5355\u548c\u66f4\u5feb\u7684\u7535\u8def\u65f6\u53d1\u73b0\u7684\u6216\u4ece\u9ed8\u9ed8\u65e0\u95fb\u4e2d\u62ef\u6551\u51fa\u6765\u7684\u3002 \u6b64\u5916\uff0c\u6570\u5b57\u8868\u793a\u7684\u9009\u62e9\u4f1a\u5f71\u54cd\u6240\u6709\u7b97\u672f\u8fd0\u7b97\u7684\u5b9e\u73b0\u6210\u672c\u548c\u5ef6\u8fdf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u901a\u8fc7\u56de\u987e\u6574\u6570\u7684\u4f20\u7edf\u548c\u5947\u5f02\u8868\u793a\u65b9\u6cd5\u6765\u5f00\u59cb\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u7814\u7a76\u3002 \u4f20\u7edf\u65b9\u6cd5\u5f53\u7136\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 \u4e00\u4e9b\u975e\u5e38\u89c4\u65b9\u6cd5\u5df2\u5e94\u7528\u4e8e\u4e13\u7528\u6570\u5b57\u7cfb\u7edf\u6216\u7b97\u672f\u786c\u4ef6\u5b9e\u73b0\u7684\u4e2d\u95f4\u6b65\u9aa4\uff0c\u5176\u4e2d\u5b83\u4eec\u901a\u5e38\u5bf9\u8ba1\u7b97\u673a\u7528\u6237\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u672c\u90e8\u5206\u7531\u4ee5\u4e0b\u56db\u7ae0\u7ec4\u6210\uff1a</p> <ul> <li>\u7b2c\u4e00\u7ae0 \u6570\u5b57\u4e0e\u7b97\u672f Numbers and Arithmetic</li> <li>\u7b2c\u4e8c\u7ae0 \u6709\u7b26\u53f7\u6570\u7684\u8868\u793a Representing Signed Numbers</li> <li>\u7b2c\u4e09\u7ae0 \u5197\u4f59\u6570\u7cfb\u7edf Redundant Number Systems</li> <li>\u7b2c\u56db\u7ae0 \u5269\u4f59\u6570\u7cfb\u7edf Residue Number Systems</li> </ul>"},{"location":"Part_01/01/","title":"1. \u6570\u5b57\u4e0e\u7b97\u672f","text":"<p>Numbers and Arithmetic</p> <p>\u201cMathematics is the queen of the sciences and arithmetic is the queen of mathematics.\u201d </p> <p>\u200b                                                                                                       CARL FRIEDRICH GAUSS</p> <p>\u201c\u6570\u5b66\u662f\u79d1\u5b66\u7684\u5973\u738b\uff0c\u7b97\u672f\u662f\u6570\u5b66\u7684\u5973\u738b\u3002\u201d</p> <p>\u200b                                  \u5361\u5c14\u00b7\u5f17\u91cc\u5fb7\u91cc\u5e0c\u00b7\u9ad8\u65af</p> <p>This chapter motivates the reader, sets the context in which the material in the rest of the book is presented, and reviews positional representations of fixed-point numbers. The chapter ends with a review of methods for number radix conversion and a preview of other number representation methods to be covered. </p> <p>\u672c\u7ae0\u65e8\u5728\u6fc0\u53d1\u8bfb\u8005\u7684\u5174\u8da3\uff0c\u8bbe\u7f6e\u672c\u4e66\u5176\u4f59\u90e8\u5206\u7684\u6750\u6599\u5448\u73b0\u7684\u80cc\u666f\uff0c\u5e76\u56de\u987e\u5b9a\u70b9\u6570\u7684\u4f4d\u7f6e\u8868\u793a\u3002\u672c\u7ae0\u6700\u540e\u56de\u987e\u4e86\u4e0d\u540c\u57fa\u6570\u8f6c\u6362\u7684\u65b9\u6cd5\u548c\u5176\u4ed6\u6570\u5b57\u8868\u793a\u65b9\u6cd5\u7684\u9884\u89c8\u3002</p> <p>Chapter topics include: \u7ae0\u8282\u4e3b\u9898\u5305\u62ec\uff1a</p> <p>1.1 \u4ec0\u4e48\u662f\u8ba1\u7b97\u673a\u7b97\u672f WHAT IS COMPUTER ARITHMETIC</p> <p>1.2 \u542f\u53d1\u6027\u793a\u4f8b MOTIVATING EXAMPLES</p> <p>1.3 \u6570\u5b57\u53ca\u5176\u7f16\u7801 NUMBERS AND THEIR ENCODINGS</p> <p>1.4 \u56fa\u5b9a\u57fa\u6570\u7684\u4f4d\u7f6e\u6570\u5b57\u8868\u793a\u7cfb\u7edf FIXED RADIX POSITIONAL NUMBER SYSTEMS</p> <p>1.5 \u6570\u5b57\u57fa\u6570\u8f6c\u6362 NUMBER RADIX CONVERSION</p> <p>1.6 \u6570\u8868\u793a\u7cfb\u7edf\u7684\u5206\u7c7b CLASSES OF NUMBER REPRESENTATIONS</p>"},{"location":"Part_01/01/#11","title":"1.1 \u4ec0\u4e48\u662f\u8ba1\u7b97\u673a\u7b97\u672f\uff1f","text":"<p>A sequence of events, begun in late 1994 and extending into 1995, embarrassed the world\u2019s largest computer chip manufacturer and put the normally dry subject of computer arithmetic on the front pages of major newspapers. The events were rooted in the work of Thomas Nicely, a mathematician at the Lynchburg College in Virginia, who was interested in twin primes (consecutive odd numbers such as 29 and 31 that are both prime). Nicely\u2019s work involved the distribution of twin primes and, particularly, the sum of their reciprocals  S = 1 / 5 + 1 / 7 + 1 / 11 + 1 / 13 + 1 / 17 + 1 / 19 + 1 / 29 + 1 / 31 +  \u00b7 \u00b7 \u00b7 + 1 /p + 1 /(p + 2 ) + \u00b7 \u00b7 \u00b7 .  While it is known that the infinite sum  S  has a finite value, no one knows what the value is. </p> <p>\u4ece 1994 \u5e74\u5e95\u5f00\u59cb\u4e00\u76f4\u6301\u7eed\u5230 1995 \u5e74\u7684\u4e00\u7cfb\u5217\u4e8b\u4ef6\u8ba9\u4e16\u754c\u4e0a\u6700\u5927\u7684\u8ba1\u7b97\u673a\u82af\u7247\u5236\u9020\u5546\u9677\u5165\u5c34\u5c2c\u5883\u5730\uff0c\u5e76\u5c06\u901a\u5e38\u67af\u71e5\u7684\u8ba1\u7b97\u673a\u7b97\u672f\u4e3b\u9898\u767b\u4e0a\u4e86\u5404\u5927\u62a5\u7eb8\u7684\u5934\u7248\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u6e90\u4e8e\u5f17\u5409\u5c3c\u4e9a\u6797\u5947\u5821\u5b66\u9662\u6570\u5b66\u5bb6\u6258\u9a6c\u65af\u00b7\u5c3c\u65af\u5229 (Thomas Nicely) \u7684\u5de5\u4f5c\uff0c\u4ed6\u5bf9\u5b6a\u751f\u7d20\u6570\uff08\u8fde\u7eed\u5947\u6570\uff0c\u4f8b\u5982 29 \u548c 31 \u90fd\u662f\u7d20\u6570\uff09\u5f88\u611f\u5174\u8da3\u3002 Nicely \u7684\u5de5\u4f5c\u6d89\u53ca\u5b6a\u751f\u7d20\u6570\u7684\u5206\u5e03\uff0c\u7279\u522b\u662f\u5b83\u4eec\u7684\u5012\u6570\u4e4b\u548c S = 1 / 5 + 1 / 7 + 1 / 11 + 1 / 13 + 1 / 17 + 1 / 19 + 1 / 29 + 1 / 31 +\u00b7  \u00b7 \u00b7 + 1 /p + 1 /(p + 2 ) + \u00b7 \u00b7 \u00b7 \u3002\u867d\u7136\u5df2\u77e5\u65e0\u9650\u548c S \u662f\u4e00\u4e2a\u6709\u9650\u503c\uff0c\u4f46\u6ca1\u6709\u4eba\u77e5\u9053\u8be5\u503c\u662f\u591a\u5c11\u3002</p> <p>Nicely was using several different computers for his work and in March 1994 added a machine based on the Intel Pentium processor to his collection. Soon he began noticing inconsistencies in his calculations and was able to trace them back to the values computed for \\(1/p\\) and \\(1/(p + 2 )\\) on the Pentium processor. At first, he suspected his own programs, the compiler, and the operating system, but by October, he became convinced that the Intel Pentium chip was at fault. This suspicion was confirmed by several other researchers following a barrage of e-mail exchanges and postings on the Internet.</p> <p>Nicely \u5728\u5de5\u4f5c\u4e2d\u4f7f\u7528\u4e86\u51e0\u53f0\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\uff0c\u5e76\u4e8e 1994 \u5e74 3 \u6708\u5728\u4ed6\u7684\u6536\u85cf\u4e2d\u6dfb\u52a0\u4e86\u4e00\u53f0\u57fa\u4e8e Intel Pentium \u5904\u7406\u5668\u7684\u8ba1\u7b97\u673a\u3002\u5f88\u5feb\u4ed6\u5f00\u59cb\u6ce8\u610f\u5230 \u8ba1\u7b97\u4e2d\u7684\u4e0d\u4e00\u81f4\u4e4b\u5904\uff0c\u5e76\u80fd\u591f\u5c06\u5176\u8ffd\u6eaf\u5230\u5954\u817e\u5904\u7406\u5668\u4e0a\u4e3a \\(1/p\\) \u548c \\(1/(p + 2 )\\) \u8ba1\u7b97\u7684\u503c\u3002\u8d77\u521d\uff0c\u4ed6\u6000\u7591\u81ea\u5df1\u7684\u7a0b\u5e8f\u3001\u7f16\u8bd1\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u5230\u4e86\u5341\u6708\u4efd\uff0c\u4ed6\u786e\u4fe1\u82f1\u7279\u5c14\u5954\u817e\u82af\u7247\u51fa\u4e86\u95ee\u9898\u3002\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7535\u5b50\u90ae\u4ef6\u4ea4\u6d41\u548c\u4e92\u8054\u7f51\u4e0a\u7684\u53d1\u5e16\u540e\uff0c\u5176\u4ed6\u51e0\u4f4d\u7814\u7a76\u4eba\u5458\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u6000\u7591\u3002</p> <p>The diagnosis finally came from Tim Coe, an engineer at Vitesse Semiconductor. Coe built a model of Pentium\u2019s floating-point division hardware based on the radix-4 SRT (named for Sweeny, Robertson, and Tocher) algorithm and came up with an example that produces the worst-case error. Using double-precision floating-point computation, the ratio  c = 4 195 835 / 3 145 727 = 1.333 820 44 \u00b7 \u00b7 \u00b7 was computed as 1.333 739 06 on the Pentium. This latter result is accurate to only 14 bits; the error is even larger than that of single-precision floating-point and more than 10 orders of magnitude worse than what is expected of double-precision computation [Mole95]. </p> <p>\u6700\u7ec8\u8bca\u65ad\u6765\u81eaVitesse Semiconductor \u7684\u5de5\u7a0b\u5e08Tim Coe\u3002 Coe \u57fa\u4e8e radix-4 SRT\uff08\u4ee5 Sweeny\u3001Robertson \u548c Tocher \u547d\u540d\uff09\u7b97\u6cd5\u6784\u5efa\u4e86 Pentium \u6d6e\u70b9\u9664\u6cd5\u786c\u4ef6\u6a21\u578b\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u4ea7\u751f\u6700\u574f\u60c5\u51b5\u9519\u8bef\u7684\u793a\u4f8b\u3002\u4f7f\u7528\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u8ba1\u7b97\uff0c\u6bd4\u7387 c = 4 195 835 / 3 145 727 = 1.333 820 44 \u00b7 \u00b7 \u00b7 \u5728\u5954\u817eCPU\u4e0a\u8ba1\u7b97\u4e3a 1.333 739 06\u3002\u540e\u4e00\u4e2a\u7ed3\u679c\u4ec5\u7cbe\u786e\u5230 14 \u6bd4\u7279\uff1b\u8be5\u8bef\u5dee\u751a\u81f3\u6bd4\u5355\u7cbe\u5ea6\u6d6e\u70b9\u7684\u8bef\u5dee\u8fd8\u8981\u5927\uff0c\u5e76\u4e14\u6bd4\u53cc\u7cbe\u5ea6\u8ba1\u7b97\u7684\u9884\u671f\u8bef\u5dee\u8fd8\u8981\u5dee 10 \u4e2a\u6570\u91cf\u7ea7\u4ee5\u4e0a [Mole95]\u3002</p> <p>The rest, as they say, is history. Intel at first dismissed the severity of the problem and admitted only a \u201csubtle flaw,\u201d with a probability of 1 in 9 billion, or once in 27,000 years for the average spreadsheet user, of leading to computational errors. It nevertheless published a \u201cwhite paper\u201d that described the bug and its potential consequences and announced a replacement policy for the defective chips based on \u201ccustomer need\u201d; that is, customers had to show that they were doing a lot of mathematical calculations to get a free replacement. Under heavy criticism from customers, manufacturers using the Pentium chip in their products, and the on-line community, Intel later revised its policy to no-questions-asked replacement. </p> <p>\u5176\u4f59\u7684\uff0c\u6b63\u5982\u4ed6\u4eec\u6240\u8bf4\uff0c\u662f\u5386\u53f2\u3002\u82f1\u7279\u5c14\u8d77\u521d\u5426\u8ba4\u4e86\u95ee\u9898\u7684\u4e25\u91cd\u6027\uff0c\u53ea\u627f\u8ba4\u5b58\u5728\u4e00\u4e2a\u201c\u5fae\u5999\u7684\u7f3a\u9677\u201d\uff0c\u5bfc\u81f4\u8ba1\u7b97\u9519\u8bef\u7684\u6982\u7387\u4e3a 90 \u4ebf\u5206\u4e4b\u4e00\uff0c\u6216\u8005\u5bf9\u4e8e\u666e\u901a\u7535\u5b50\u8868\u683c\u7528\u6237\u6765\u8bf4\u6bcf 27,000 \u5e74\u4e00\u6b21\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u8fd8\u662f\u53d1\u5e03\u4e86\u4e00\u4efd\u201c\u767d\u76ae\u4e66\u201d\uff0c\u63cf\u8ff0\u4e86\u8be5\u6f0f\u6d1e\u53ca\u5176\u6f5c\u5728\u540e\u679c\uff0c\u5e76\u5ba3\u5e03\u4e86\u57fa\u4e8e\u201c\u5ba2\u6237\u9700\u6c42\u201d\u7684\u7f3a\u9677\u82af\u7247\u7684\u66f4\u6362\u653f\u7b56\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ba2\u6237\u5fc5\u987b\u8bc1\u660e\u4ed6\u4eec\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u6570\u5b66\u8ba1\u7b97\u624d\u80fd\u83b7\u5f97\u514d\u8d39\u66f4\u6362\u3002\u5728\u5ba2\u6237\u3001\u4ea7\u54c1\u4e2d\u4f7f\u7528\u5954\u817e\u82af\u7247\u7684\u5236\u9020\u5546\u4ee5\u53ca\u5728\u7ebf\u793e\u533a\u7684\u4e25\u5389\u6279\u8bc4\u4e0b\uff0c\u82f1\u7279\u5c14\u540e\u6765\u5c06\u5176\u653f\u7b56\u4fee\u6539\u4e3a\u65e0\u6761\u4ef6\u66f4\u6362\u3002</p> <p>Whereas supercomputing, microchips, computer networks, advanced applications (particularly game-playing programs), and many other aspects of computer technology have made the news regularly, the Intel Pentium bug was the first instance of arithmetic (or anything inside the CPU for that matter) becoming front-page news. While this can be interpreted as a sign of pedantic dryness, it is more likely an indicator of stunning technological success. Glaring software failures have come to be routine events in our information-based society, but hardware bugs are rare and newsworthy. </p> <p>\u800c\u8d85\u7ea7\u8ba1\u7b97\u3001\u5fae\u82af\u7247\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u9ad8\u7ea7\u5e94\u7528\uff08\u7279\u522b\u662f\u6e38\u620f\u7a0b\u5e8f\uff09\u4ee5\u53ca\u8ba1\u7b97\u673a\u6280\u672f\u7684\u8bb8\u591a\u5176\u4ed6\u65b9\u9762\u90fd\u7ecf\u5e38\u6210\u4e3a\u65b0\u95fb\uff0c\u82f1\u7279\u5c14\u5954\u817e bug \u662f\u7b97\u672f\uff08\u6216 CPU \u5185\u90e8\u7684\u4efb\u4f55\u76f8\u5173\u4e8b\u7269\uff09\u6210\u4e3a\u5934\u7248\u65b0\u95fb\u7684\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u3002\u867d\u7136\u8fd9\u53ef\u4ee5\u88ab\u89e3\u91ca\u4e3a\u8fc2\u8150\u67af\u71e5\u7684\u8868\u73b0\uff0c\u4f46\u5b83\u66f4\u53ef\u80fd\u662f\u4ee4\u4eba\u60ca\u53f9\u7684\u6280\u672f\u6210\u529f\u7684\u6307\u6807\u3002\u5728\u6211\u4eec\u7684\u4fe1\u606f\u793e\u4f1a\u4e2d\uff0c\u660e\u663e\u7684\u8f6f\u4ef6\u6545\u969c\u5df2\u6210\u4e3a\u5bb6\u5e38\u4fbf\u996d\uff0c\u4f46\u786c\u4ef6\u9519\u8bef\u5374\u5f88\u5c11\u89c1\u4e14\u5177\u6709\u65b0\u95fb\u4ef7\u503c\u3002</p> <p>Having read the foregoing account, you may wonder what the radix-4 SRT division algorithm is and how it can lead to such problems. Well, that\u2019s the whole point of this introduction! You need computer arithmetic to understand the rest of the story. Computer arithmetic is a subfield of digital computer organization. It deals with the hardware realization of arithmetic functions to support various computer architectures as well as with arithmetic algorithms for firmware or software implementation. A major thrust of digital computer arithmetic is the design of hardware algorithms and circuits to enhance the speed of numeric operations. Thus much of what is presented here complements the  architectural  and  algorithmic  speedup techniques studied in the context of high-performance computer architecture and parallel processing. </p> <p>\u8bfb\u5b8c\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u4f60\u53ef\u80fd\u60f3\u77e5\u9053radix-4 SRT\u9664\u6cd5\u7b97\u6cd5\u662f\u4ec0\u4e48\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5bfc\u81f4\u6b64\u7c7b\u95ee\u9898\u7684\u3002\u597d\u4e86\uff0c\u8fd9\u5c31\u662f\u672c\u6b21\u4ecb\u7ecd\u7684\u91cd\u70b9\uff01\u4f60\u9700\u8981\u8ba1\u7b97\u673a\u7b97\u672f\u6765\u7406\u89e3\u6545\u4e8b\u7684\u5176\u4f59\u90e8\u5206\u3002\u8ba1\u7b97\u673a\u7b97\u672f\u662f\u6570\u5b57\u8ba1\u7b97\u673a\u7ec4\u7ec7\u7684\u4e00\u4e2a\u5b50\u9886\u57df\u3002\u5b83\u6d89\u53ca\u7b97\u672f\u51fd\u6570\u7684\u786c\u4ef6\u5b9e\u73b0\u4ee5\u652f\u6301\u5404\u79cd\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4ee5\u53ca\u7528\u4e8e\u56fa\u4ef6\u6216\u8f6f\u4ef6\u5b9e\u73b0\u7684\u7b97\u672f\u7b97\u6cd5\u3002\u6570\u5b57\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u4e00\u4e2a\u4e3b\u8981\u63a8\u52a8\u529b\u662f\u786c\u4ef6\u7b97\u6cd5\u548c\u7535\u8def\u7684\u8bbe\u8ba1\uff0c\u4ee5\u63d0\u9ad8\u6570\u5b57\u8fd0\u7b97\u7684\u901f\u5ea6\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7684\u5927\u90e8\u5206\u5185\u5bb9\u8865\u5145\u4e86\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u5e76\u884c\u5904\u7406\u7684\u80cc\u666f\u4e0b\u7814\u7a76\u7684\u4f53\u7cfb\u7ed3\u6784\u548c\u7b97\u6cd5\u52a0\u901f\u6280\u672f\u3002</p> <p>Much of our discussion relates to the design of top-of-the-line CPUs with high-performance parallel arithmetic circuits. However, we will at times also deal with slow bit-serial designs for embedded applications, where implementation cost and input/output pin limitations are of prime concern. It would be a mistake, though, to conclude that computer arithmetic is useful only to computer designers. We will see shortly that you can use scientific calculators more effectively and write programs that are more accurate and/or more efficient after a study of computer arithmetic. You will be able to render informed judgment when faced with the problem of choosing a digital signal processor chip for your project. And, of course, you will know what exactly went wrong in the Pentium. </p> <p>\u6211\u4eec\u7684\u5927\u90e8\u5206\u8ba8\u8bba\u90fd\u4e0e\u5177\u6709\u9ad8\u6027\u80fd\u5e76\u884c\u8fd0\u7b97\u7535\u8def\u7684\u9876\u7ea7 CPU \u7684\u8bbe\u8ba1\u6709\u5173\u3002\u7136\u800c\uff0c\u6211\u4eec\u6709\u65f6\u4e5f\u4f1a\u5904\u7406\u5d4c\u5165\u5f0f\u5e94\u7528\u7684\u6162\u901f\u4f4d\u4e32\u884c\u8bbe\u8ba1\uff0c\u5176\u4e2d\u5b9e\u73b0\u6210\u672c\u548c\u8f93\u5165/\u8f93\u51fa\u5f15\u811a\u9650\u5236\u662f\u9996\u8981\u8003\u8651\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u5982\u679c\u8ba4\u4e3a\u8ba1\u7b97\u673a\u7b97\u672f\u53ea\u5bf9\u8ba1\u7b97\u673a\u8bbe\u8ba1\u8005\u6709\u7528\uff0c\u90a3\u5c31\u9519\u4e86\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u770b\u5230\uff0c\u5728\u5b66\u4e60\u8ba1\u7b97\u673a\u7b97\u672f\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u4f7f\u7528\u79d1\u5b66\u8ba1\u7b97\u5668\u5e76\u7f16\u5199\u66f4\u51c6\u786e\u548c/\u6216\u66f4\u9ad8\u6548\u7684\u7a0b\u5e8f\u3002\u4f60\u4f1a\u5f53\u9762\u4e34\u4e3a\u60a8\u7684\u9879\u76ee\u9009\u62e9\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\u82af\u7247\u7684\u95ee\u9898\u65f6\uff0c\u80fd\u591f\u505a\u51fa\u660e\u667a\u7684\u5224\u65ad\u3002\u5f53\u7136\uff0c\u60a8\u4e5f\u4f1a\u77e5\u9053\u5954\u817e\u5230\u5e95\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898\u3002</p> <p></p> \u786c\u4ef6\uff08\u672c\u4e66\u7684\u91cd\u70b9\uff09 \u8f6f\u4ef6 \u4e3a\u57fa\u7840\u7b97\u672f\u548c\u5176\u4ed6\u8fd0\u7b97\u8bbe\u8ba1\u9ad8\u6548\u7684\u6570\u5b57\u7535\u8def \u5982 + \u3001 \u2212 \u3001 \u00d7 \u3001 \u00f7 \u3001\u5bf9\u6570\u3001\u6b63\u5f26\u548c\u4f59\u5f26\u3002 \u6570\u503c\u65b9\u6cd5\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u504f\u5fae\u5206\u65b9\u7a0b\u7b49 \u95ee\u9898\uff1a \u7b97\u6cd5 \u9519\u8bef\u5206\u6790 \u901f\u5ea6/\u6210\u672c\u6743\u8861 \u786c\u4ef6\u5b9e\u73b0 \u6d4b\u8bd5\u3001\u9a8c\u8bc1 \u95ee\u9898\uff1a\u7b97\u6cd5  \u9519\u8bef\u5206\u6790 \u8ba1\u7b97\u590d\u6742\u5ea6 \u7f16\u7a0b \u6d4b\u8bd5\u3001\u9a8c\u8bc1 \u4e00\u822c\u7528\u9014 \u7279\u6b8a\u76ee\u7684\u7528\u9014 \u7075\u6d3b\u7684\u6570\u636e\u8def\u5f84 \u9002\u5408\u5e94\u7528\u9886\u57df\uff0c\u4f8b\u5982\u6570\u5b57\u6ee4\u6ce2 \u5feb\u901f\u539f\u59cb\u64cd\u4f5c\uff0c\u4f8b\u5982 + , \u2212 , \u00d7 , \u00f7 \u56fe\u50cf\u5904\u7406 \u57fa\u51c6\u6d4b\u8bd5 \u96f7\u8fbe\u8ffd\u8e2a <p>\u56fe1.1 \u8ba1\u7b97\u673a\u7b97\u672f\u7684\u8303\u56f4\u3002</p> <p>Figure 1.1 depicts the scope of computer arithmetic. On the hardware side, the focus is on implementing the four basic arithmetic operations (five, if you count square-rooting), as well as commonly used computations such as exponentials, logarithms, and trigonometric functions. For this, we need to develop algorithms, translate them to hardware structures, and choose from among multiple implementations based on cost\u2013performance criteria. Since the exact computations to be carried out by the general-purpose hardware are not known a priori, benchmarking is used to predict the overall system performance for typical operation mixes and to make various design decisions. </p> <p>\u56fe 1.1 \u63cf\u8ff0\u4e86\u8ba1\u7b97\u673a\u7b97\u672f\u7684\u8303\u56f4\u3002\u5728\u786c\u4ef6\u65b9\u9762\uff0c\u91cd\u70b9\u662f\u5b9e\u73b0\u56db\u79cd\u57fa\u672c\u7b97\u672f\u8fd0\u7b97\uff08\u5982\u679c\u7b97\u5e73\u65b9\u6839\u5219\u4e3a\u4e94\u79cd\uff09\uff0c\u4ee5\u53ca\u5e38\u7528\u7684\u8ba1\u7b97\uff0c\u4f8b\u5982\u6307\u6570\u3001\u5bf9\u6570\u548c\u4e09\u89d2\u51fd\u6570\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5f00\u53d1\u7b97\u6cd5\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u786c\u4ef6\u7ed3\u6784\uff0c\u5e76\u6839\u636e\u6027\u4ef7\u6bd4\u6807\u51c6\u4ece\u591a\u79cd\u5b9e\u73b0\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u7531\u4e8e\u5148\u9a8c\u672a\u77e5\u901a\u7528\u786c\u4ef6\u8981\u6267\u884c\u7684\u7cbe\u786e\u8ba1\u7b97\uff0c\u56e0\u6b64\u4f7f\u7528\u57fa\u51c6\u6d4b\u8bd5\u6765\u9884\u6d4b\u5178\u578b\u64cd\u4f5c\u7ec4\u5408\u7684\u6574\u4f53\u7cfb\u7edf\u6027\u80fd\u5e76\u505a\u51fa\u5404\u79cd\u8bbe\u8ba1\u51b3\u7b56\u3002</p> <p>On the software side, the primitive functions are given (e.g., in the form of a hardware chip such as a Pentium processor or a software tool such as Mathematica), and the task is to synthesize cost-effective algorithms, with desirable error characteristics, to solve various problems of interest. These topics are covered in numerical analysis and computational science courses and textbooks and are thus mostly outside the scope of this book. </p> <p>\u5728\u8f6f\u4ef6\u65b9\u9762\uff0c\u7ed9\u51fa\u4e86\u539f\u59cb\u529f\u80fd\uff08\u4f8b\u5982\uff0c\u4ee5\u5954\u817e\u5904\u7406\u5668\u7b49\u786c\u4ef6\u82af\u7247\u6216Mathematica\u7b49\u8f6f\u4ef6\u5de5\u5177\u7684\u5f62\u5f0f\uff09\uff0c\u4efb\u52a1\u662f\u7efc\u5408\u5177\u6709\u6210\u672c\u6548\u76ca\u7684\u7b97\u6cd5\uff0c\u5177\u6709\u7406\u60f3\u7684\u8bef\u5dee\u7279\u6027\uff0c\u4ee5\u89e3\u51b3\u5404\u79cd\u611f\u5174\u8da3\u7684\u95ee\u9898\u3002\u8fd9\u4e9b\u4e3b\u9898\u5305\u542b\u5728\u6570\u503c\u5206\u6790\u548c\u8ba1\u7b97\u79d1\u5b66\u8bfe\u7a0b\u548c\u6559\u79d1\u4e66\u4e2d\uff0c\u56e0\u6b64\u5927\u591a\u4e0d\u5c5e\u4e8e\u672c\u4e66\u7684\u8303\u56f4\u3002</p> <p>Within the hardware realm, we will be dealing with both general-purpose arithmetic/logic units, of the type found in many commercially available processors, and special-purpose structures for solving specific application problems. The differences in the two areas are minor as far as the arithmetic algorithms are concerned. However, in view of the specific technological constraints, production volumes, and performance criteria, hardware implementations tend to be quite different. General-purpose processor chips that are mass-produced have highly optimized custom designs. Implementations of low-volume, special-purpose systems, on the other hand, typically rely on semicustom and off-the-shelf components. However, when critical and strict requirements, such as extreme speed, very low power consumption, and miniature size, preclude the use of semicustom or off-the-shelf components, the much higher cost of a custom design may be justified even for a special-purpose system. </p> <p>\u5728\u786c\u4ef6\u9886\u57df\uff0c\u6211\u4eec\u5c06\u5904\u7406\u5728\u8bb8\u591a\u5546\u7528\u5904\u7406\u5668\u4e2d\u90fd\u5b58\u7684\u901a\u7528\u7684\u7b97\u672f/\u903b\u8f91\u5355\u5143\uff0c\u4ee5\u53ca\u7528\u4e8e\u89e3\u51b3\u7279\u5b9a\u5e94\u7528\u95ee\u9898\u7684\u4e13\u7528\u7ed3\u6784\u3002\u5c31\u7b97\u672f\u7b97\u6cd5\u800c\u8a00\uff0c\u8fd9\u4e24\u4e2a\u9886\u57df\u7684\u5dee\u5f02\u5f88\u5c0f\u3002\u7136\u800c\uff0c\u9274\u4e8e\u5177\u4f53\u7684\u6280\u672f\u9650\u5236\u3001\u4ea7\u91cf\u548c\u6027\u80fd\u6807\u51c6\uff0c\u786c\u4ef6\u5b9e\u73b0\u5f80\u5f80\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6279\u91cf\u751f\u4ea7\u7684\u901a\u7528\u5904\u7406\u5668\u82af\u7247\u5177\u6709\u9ad8\u5ea6\u4f18\u5316\u7684\u5b9a\u5236\u8bbe\u8ba1\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5c0f\u6279\u91cf\u3001\u7279\u6b8a\u7528\u9014\u7cfb\u7edf\u7684\u5b9e\u73b0\u901a\u5e38\u4f9d\u8d56\u4e8e\u534a\u5b9a\u5236\u548c\u73b0\u6210\u7684\u7ec4\u4ef6\u3002\u7136\u800c\uff0c\u5f53\u5173\u952e\u548c\u4e25\u683c\u7684\u8981\u6c42\uff08\u4f8b\u5982\u6781\u901f\u3001\u6781\u4f4e\u529f\u8017\u548c\u5fae\u578b\u5c3a\u5bf8\uff09\u59a8\u788d\u4f7f\u7528\u534a\u5b9a\u5236\u6216\u73b0\u6210\u7ec4\u4ef6\u65f6\uff0c\u5373\u4f7f\u5bf9\u4e8e\u7279\u6b8a\u7528\u9014\u7684\u7cfb\u7edf\uff0c\u5b9a\u5236\u8bbe\u8ba1\u7684\u9ad8\u5f97\u591a\u7684\u6210\u672c\u4e5f\u53ef\u80fd\u662f\u5408\u7406\u7684\u3002</p>"},{"location":"Part_01/01/#12","title":"1.2 \u542f\u53d1\u6027\u793a\u4f8b","text":"<p>Use a calculator that has the square-root, square, and exponentiation (xy) functions to perform the following computations. Numerical results, obtained with a (10 + 2)-digit scientific calculator, are provided. You may obtain slightly different values.</p> <p>\u4f7f\u7528\u5177\u6709\u5e73\u65b9\u6839\u3001\u5e73\u65b9\u548c\u6307\u6570 (xy) \u51fd\u6570\u7684\u8ba1\u7b97\u5668\u6765\u6267\u884c\u4ee5\u4e0b\u8ba1\u7b97\u3002\u63d0\u4f9b\u4e86\u4f7f\u7528 (10 + 2) \u4f4d\u79d1\u5b66\u8ba1\u7b97\u5668\u83b7\u5f97\u7684\u6570\u503c\u7ed3\u679c\u3002\u60a8\u53ef\u80fd\u4f1a\u83b7\u5f97\u7565\u6709\u4e0d\u540c\u7684\u503c\u3002</p> <p>First, compute \u201cthe 1024th root of 2\u201d in the following two ways:</p> <p>\u9996\u5148\uff0c\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u8ba1\u7b97\u201c2\u76841024\u6b21\u65b9\u6839\u201d\uff1a</p> \\[ \\begin{align} u &amp;= \\underbrace{\\sqrt{\\sqrt{\\dots\\sqrt{2}}}}_{10 \\text{ times}} &amp;= \\text{1.000 677 131}  \\\\ v &amp;= 2^{1/1024} &amp;= \\text{1.000 677 131} \\end{align} \\] <p>Save both  u  and  v  in memory, if possible. If you can\u2019t store  u  and  v, simply recompute them when needed. Now, perform the following two equivalent computations based on  u: 10 times</p> <p>\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5c06 u \u548c v \u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u60a8\u65e0\u6cd5\u5b58\u50a8 u \u548c v\uff0c\u53ea\u9700\u5728\u9700\u8981\u65f6\u91cd\u65b0\u8ba1\u7b97\u5b83\u4eec\u5373\u53ef\u3002\u73b0\u5728\uff0c\u57fa\u4e8eu\u6267\u884c\u4ee5\u4e0b\u4e24\u4e2a\u7b49\u6548\u8ba1\u7b9710\u6b21</p> \\[ \\begin{align} x &amp;= \\overbrace{(((u^2)^2)...)^2}^{10 \\text{ times}} &amp;= \\text{1.999 999 963} \\\\ {x}' &amp;=  u^{1024} &amp;= \\text{1.999 999 973} \\end{align} \\] <p>Similarly, perform the following two equivalent computations based on v: 10 times \u540c\u6837\u6839\u636ev\u8fdb\u884c\u4ee5\u4e0b\u4e24\u6b21\u7b49\u4ef7\u8ba1\u7b9710\u6b21</p> \\[ \\begin{array}{l} y &amp;= \\overbrace{(((v^2)^2)...)^2}^ {10 \\text{ times}} &amp;= \\text{1.999 999 983} \\\\ {y}' &amp;=  v^{1024} &amp;= \\text{1.999 999 994} \\end{array} \\] <p>The four different values obtained for \\(x, {x}', y, {y}'\\), in lieu of 2, hint that perhaps v and u are not really the same value. Let\u2019s compute their difference:</p> <p>\u4e3a \\(x, {x}', y, {y}'\\)\u83b7\u5f97\u7684\u56db\u4e2a\u4e0d\u540c\u503c\uff08\u4ee3\u66ff 2\uff09\u6697\u793a v \u548c u \u53ef\u80fd\u5e76\u4e0d\u662f\u771f\u6b63\u76f8\u540c\u7684\u503c\u3002\u8ba9\u6211\u4eec\u8ba1\u7b97\u4e00\u4e0b\u5b83\u4eec\u7684\u5dee\u5f02\uff1a $$ w = v \u2212 u = 1 \\times 10^{\u221211} $$ Why isn\u2019t  w  equal to zero? The reason is that even though  u  and  v  are displayed identically, they in fact have different internal representations. Most calculators have hidden or guard digits (the author\u2019s has two) to provide a higher degree of accuracy and to reduce the effect of accumulated errors when long computation sequences are performed. </p> <p>\u4e3a\u4ec0\u4e48 w \u4e0d\u7b49\u4e8e 0\uff1f\u539f\u56e0\u662f\uff0c\u5c3d\u7ba1 u \u548c v \u663e\u793a\u76f8\u540c\uff0c\u4f46\u5b83\u4eec\u5b9e\u9645\u4e0a\u5177\u6709\u4e0d\u540c\u7684\u5185\u90e8\u8868\u793a\u3002\u5927\u591a\u6570\u8ba1\u7b97\u5668\u90fd\u6709\u9690\u85cf\u6216\u4fdd\u62a4\u6570\u5b57\uff08\u4f5c\u8005\u6709\u4e24\u4e2a\uff09\uff0c\u4ee5\u63d0\u4f9b\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u5e76\u51cf\u5c11\u6267\u884c\u957f\u8ba1\u7b97\u5e8f\u5217\u65f6\u7d2f\u79ef\u9519\u8bef\u7684\u5f71\u54cd\u3002</p> <p>Let\u2019s see if we can determine the hidden digits for the  u  and  v  values above. Here is one way:</p> <p>\u8ba9\u6211\u4eec\u770b\u770b\u662f\u5426\u53ef\u4ee5\u786e\u5b9a\u4e0a\u9762 u \u548c v \u503c\u7684\u9690\u85cf\u6570\u5b57\u3002\u8fd9\u662f\u4e00\u79cd\u65b9\u6cd5\uff1a</p> \\[ \\begin{array}{l} (u \u2212 1 ) \u00d7 1000 = \\text{0.677 130 680 [\u9690\u85cf\u00b7\u00b7\u00b7(0)68]} \\\\ (v \u2212 1 ) \u00d7 1000 = \\text{0.677 130 690 [\u9690\u85cf\u00b7\u00b7\u00b7(0)69]} \\end{array} \\] <p>This explains why  w  is not zero, which in turn tells us why  u 1024 =  v 1024. The following simple analysis might be helpful in this regard. </p> <p>\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48 w \u4e0d\u4e3a\u96f6\uff0c\u8fdb\u800c\u544a\u8bc9\u6211\u4eec\u4e3a\u4ec0\u4e48 \\(u^{1024} \\ne v^{1024}\\)\u3002\u4ee5\u4e0b\u7b80\u5355\u5206\u6790\u5728\u8fd9\u65b9\u9762\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002</p> \\[ \\begin{align}{} v^{1024} &amp;=  (u + 10^{\u221211})^{1024} \\\\ &amp;\\approx u^{1024} + 1024 \\times 10^{\u221211} u^{1023} \\approx u^{1024} + 2 \\times 10^{\u22128} \\end{align} \\] <p>The difference between  \\(v^{1024}\\) and  \\(u^{1024}\\) is in good agreement with the result of the preceding analysis. The difference between  \\((((u^2) ^2 ) \u00b7 \u00b7 \u00b7  )^2\\) and \\(u^{1024}\\)  exists because the former is computed through repeated multiplications while the latter uses the built-in exponentiation routine of the calculator, which is likely to be less precise. </p> <p>\\(v^{1024}\\) \u548c \\(u^{1024}\\) \u4e4b\u95f4\u7684\u5dee\u5f02\u4e0e\u524d\u9762\u7684\u5206\u6790\u7ed3\u679c\u975e\u5e38\u543b\u5408\u3002\\((((u^2) ^2 ) \u00b7 \u00b7 \u00b7  )^2\\) \u548c \\(u^{1024}\\) \u4e4b\u95f4\u5b58\u5728\u5dee\u5f02\uff0c\u56e0\u4e3a\u524d\u8005\u662f\u901a\u8fc7\u91cd\u590d\u4e58\u6cd5\u8ba1\u7b97\u7684\uff0c\u800c\u540e\u8005\u4f7f\u7528\u8ba1\u7b97\u5668\u7684\u5185\u7f6e\u6c42\u5e42\u4f8b\u7a0b\uff0c\u53ef\u80fd\u4e0d\u592a\u7cbe\u786e\u3002</p> <p>Despite the discrepancies, the results of the foregoing computations are remarkably precise. The values of  u  and  v  agree to 11 decimal digits, while those of  \\(x, {x}', y, {y}'\\)are identical to 8 digits. This is better than single-precision, floating-point arithmetic on the most elaborate and expensive computers. Do we have a right to expect more from a calculator that costs $20 or less? Ease of use is, of course, a different matter from speed or precision. For a detailed exposition of some deficiencies in current calculators, and a refreshingly new design approach, see [Thim95]. </p> <p>\u5c3d\u7ba1\u5b58\u5728\u5dee\u5f02\uff0c\u4e0a\u8ff0\u8ba1\u7b97\u7684\u7ed3\u679c\u4ecd\u7136\u975e\u5e38\u7cbe\u786e\u3002 u\u548cv\u7684\u503c\u4e00\u81f4\u4e3a11\u4f4d\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u800c\\(x, {x}', y, {y}'\\)\u7684\u503c\u4e00\u81f4\u4e3a8\u4f4d\u6570\u5b57\u3002\u8fd9\u6bd4\u6700\u590d\u6742\u3001\u6700\u6602\u8d35\u7684\u8ba1\u7b97\u673a\u4e0a\u7684\u5355\u7cbe\u5ea6\u6d6e\u70b9\u8fd0\u7b97\u8981\u597d\u3002\u6211\u4eec\u662f\u5426\u6709\u6743\u5bf9\u552e\u4ef7 20 \u7f8e\u5143\u6216\u66f4\u5c11\u7684\u8ba1\u7b97\u5668\u62b1\u6709\u66f4\u9ad8\u7684\u671f\u671b\uff1f\u5f53\u7136\uff0c\u6613\u7528\u6027\u4e0e\u901f\u5ea6\u6216\u7cbe\u5ea6\u662f\u4e0d\u540c\u7684\u95ee\u9898\u3002\u6709\u5173\u5f53\u524d\u8ba1\u7b97\u5668\u7684\u4e00\u4e9b\u7f3a\u9677\u7684\u8be6\u7ec6\u8bf4\u660e\u4ee5\u53ca\u4ee4\u4eba\u8033\u76ee\u4e00\u65b0\u7684\u65b0\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 [Thim95]\u3002</p> <p>The example calculations demonstrate that familiarity with computer arithmetic is helpful for appreciating and correctly interpreting our everyday dealings with numbers. There is much more to computer arithmetic, however. Inattention to fundamentals of this field has led to several documented, and no doubt many more unreported, disasters. In the rest of this section, we describe two such events that were caused by inadequate precision and unduly limited range of numerical results. </p> <p>\u793a\u4f8b\u8ba1\u7b97\u8868\u660e\uff0c\u719f\u6089\u8ba1\u7b97\u673a\u7b97\u672f\u6709\u52a9\u4e8e\u7406\u89e3\u548c\u6b63\u786e\u89e3\u91ca\u6211\u4eec\u65e5\u5e38\u5904\u7406\u7684\u6570\u5b57\u3002\u7136\u800c\uff0c\u8ba1\u7b97\u673a\u7b97\u672f\u8fd8\u6709\u66f4\u591a\u5185\u5bb9\u3002\u5bf9\u8fd9\u4e00\u9886\u57df\u57fa\u672c\u539f\u7406\u7684\u5ffd\u89c6\u5bfc\u81f4\u4e86\u51e0\u8d77\u6709\u8bb0\u5f55\u7684\u707e\u96be\uff0c\u6beb\u65e0\u7591\u95ee\u8fd8\u6709\u66f4\u591a\u672a\u62a5\u9053\u7684\u707e\u96be\u3002\u5728\u672c\u8282\u7684\u5176\u4f59\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u63cf\u8ff0\u7531\u7cbe\u5ea6\u4e0d\u8db3\u548c\u6570\u503c\u7ed3\u679c\u8303\u56f4\u8fc7\u5ea6\u6709\u9650\u5f15\u8d77\u7684\u4e24\u4e2a\u6b64\u7c7b\u4e8b\u4ef6\u3002</p> <p>The first such event, which may have led to the loss of 28 human lives in February 1991, is the failure of the American Patriot missile battery in Dhahran, Saudi Arabia, to intercept a number of Iraqi Scud missiles. An investigation by the US General Accounting Office [GAO92] blamed the incident on a \u201csoftware problem\u201d that led to inaccurate calculation of the elapsed time since the last system boot. It was explained that the system\u2019s internal clock measured time in tenths of a second. The measured time was then multiplied by a 24-bit truncated fractional representation of 1/10, with an error of about \\(( 3 / 4 ) \u00d7 10^{\u221223} \u2248 10^{\u22127}\\) . Some error was unavoidable, because 1/10 does not have an exact binary representation. Though rather small, when accumulated over a 10-hour operation period, this error caused the calculated time to be off by roughly 1/3 of a second. Because the Scud missile flew at a speed of about 1700 m/s, its calculated position might have differed from its actual position by more than 1/2 km; an error that is large enough to cause a missed interception. </p> <p>1991 \u5e74 2 \u6708\u53d1\u751f\u7684\u7b2c\u4e00\u8d77\u6b64\u7c7b\u4e8b\u4ef6\u53ef\u80fd\u5bfc\u81f4 28 \u4eba\u4e27\u751f\uff0c\u5f53\u65f6\u4f4d\u4e8e\u6c99\u7279\u963f\u62c9\u4f2f\u8fbe\u5170\u7684\u7f8e\u56fd\u7231\u56fd\u8005\u5bfc\u5f39\u8fde\u672a\u80fd\u62e6\u622a\u591a\u679a\u4f0a\u62c9\u514b\u98de\u6bdb\u817f\u5bfc\u5f39\u3002\u7f8e\u56fd\u5ba1\u8ba1\u603b\u7f72 [GAO92] \u7684\u4e00\u9879\u8c03\u67e5\u5c06\u8be5\u4e8b\u4ef6\u5f52\u548e\u4e8e\u201c\u8f6f\u4ef6\u95ee\u9898\u201d\uff0c\u8be5\u95ee\u9898\u5bfc\u81f4\u81ea\u4e0a\u6b21\u7cfb\u7edf\u542f\u52a8\u4ee5\u6765\u7ecf\u8fc7\u7684\u65f6\u95f4\u8ba1\u7b97\u4e0d\u51c6\u786e\u3002\u636e\u89e3\u91ca\uff0c\u7cfb\u7edf\u7684\u5185\u90e8\u65f6\u949f\u4ee5\u5341\u5206\u4e4b\u4e00\u79d2\u4e3a\u5355\u4f4d\u6d4b\u91cf\u65f6\u95f4\u3002\u7136\u540e\u5c06\u6d4b\u91cf\u7684\u65f6\u95f4\u4e58\u4ee5 1/10 \u7684 24 \u4f4d\u622a\u65ad\u5c0f\u6570\u8868\u793a\uff0c\u8bef\u5dee\u7ea6\u4e3a \\(( 3 / 4 ) \u00d7 10^{\u221223} \u2248 10^{\u22127}\\) \u3002\u4e00\u4e9b\u9519\u8bef\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u56e0\u4e3a 1/10 \u6ca1\u6709\u7cbe\u786e\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u867d\u7136\u8fd9\u4e2a\u8bef\u5dee\u5f88\u5c0f\uff0c\u4f46\u5728 10 \u5c0f\u65f6\u7684\u8fd0\u884c\u671f\u95f4\u7d2f\u79ef\u65f6\uff0c\u8be5\u8bef\u5dee\u5bfc\u81f4\u8ba1\u7b97\u65f6\u95f4\u504f\u5dee\u5927\u7ea6 1/3 \u79d2\u949f\u7684\u65f6\u95f4\u3002\u7531\u4e8e\u98de\u6bdb\u817f\u5bfc\u5f39\u7684\u98de\u884c\u901f\u5ea6\u7ea6\u4e3a1700m/s\uff0c\u5176\u8ba1\u7b97\u4f4d\u7f6e\u53ef\u80fd\u4e0e\u5b9e\u9645\u4f4d\u7f6e\u76f8\u5dee1/2\u516c\u91cc\u4ee5\u4e0a\uff1b\u9519\u8bef\u5927\u5230\u8db3\u4ee5\u5bfc\u81f4\u9519\u8fc7\u62e6\u622a\u3002</p> <p>The second such event is the explosion of an Ariane 5 rocket 30 seconds after liftoff in June 1996. Fortunately, this incident, also attributed to a \u201csoftware error\u201d [Lion96], did not lead to any loss of life, but its price tag was the embarrassing collapse of an ambitious development project costing US $7 billion. According to the explanations offered, at some point in the control program, a 64-bit floating-point number pertaining to the horizontal velocity of the rocket was to be converted to a 16-bit signed integer. Because the floating-point number had a value greater than what could fit in a 16-bit signed integer, an overflow exception arose that did not have adequate handling provisions by the software. This caused a processor shutdown, which triggered a cascade of events leading to improper attempts at course correction and the eventual disintegration that spread debris over several square kilometers. The doomed conversion routine was a leftover from the software used for the Ariane 4 rocket, carried over intact according to the maxim \u201cif it ain\u2019t broke, don\u2019t fix it.\u201d However, the designers failed to take into account that within the initial 40 seconds of flight when the system in question was active, the Ariane 5 rocket could reach a horizontal velocity that was about five times that of the Ariane 4. </p> <p>\u7b2c\u4e8c\u8d77\u6b64\u7c7b\u4e8b\u4ef6\u662f 1996 \u5e74 6 \u6708\u963f\u4e3d\u4e9a\u5a1c 5 \u53f7\u706b\u7bad\u5347\u7a7a 30 \u79d2\u540e\u7206\u70b8\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u8d77\u540c\u6837\u5f52\u56e0\u4e8e\u201c\u8f6f\u4ef6\u9519\u8bef\u201d[Lion96]\u7684\u4e8b\u4ef6\u6ca1\u6709\u9020\u6210\u4efb\u4f55\u4eba\u5458\u4f24\u4ea1\uff0c\u4f46\u5176\u4ee3\u4ef7\u662f\u8017\u8d44 70 \u4ebf\u7f8e\u5143\u7684\u96c4\u5fc3\u52c3\u52c3\u7684\u5f00\u53d1\u9879\u76ee\u7684\u5c34\u5c2c\u5d29\u6e83\u3002\u6839\u636e\u63d0\u4f9b\u7684\u89e3\u91ca\uff0c\u5728\u63a7\u5236\u7a0b\u5e8f\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u4e0e\u706b\u7bad\u6c34\u5e73\u901f\u5ea6\u76f8\u5173\u7684 64 \u4f4d\u6d6e\u70b9\u6570\u5c06\u88ab\u8f6c\u6362\u4e3a 16 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002\u7531\u4e8e\u6d6e\u70b9\u6570\u7684\u503c\u5927\u4e8e 16 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u6240\u80fd\u5bb9\u7eb3\u7684\u503c\uff0c\u56e0\u6b64\u51fa\u73b0\u4e86\u6ea2\u51fa\u5f02\u5e38\uff0c\u800c\u8f6f\u4ef6\u6ca1\u6709\u63d0\u4f9b\u8db3\u591f\u7684\u5904\u7406\u89c4\u5b9a\u3002\u8fd9\u5bfc\u81f4\u4e86\u5904\u7406\u5668\u5173\u95ed\uff0c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u4e8b\u4ef6\uff0c\u5bfc\u81f4\u822a\u5411\u4fee\u6b63\u7684\u4e0d\u5f53\u5c1d\u8bd5\u4ee5\u53ca\u6700\u7ec8\u7684\u89e3\u4f53\uff0c\u788e\u7247\u6563\u5e03\u5728\u51e0\u5e73\u65b9\u516c\u91cc\u7684\u8303\u56f4\u5185\u3002\u8fd9\u4e2a\u6ce8\u5b9a\u5931\u8d25\u7684\u8f6c\u6362\u7a0b\u5e8f\u662f\u963f\u4e3d\u4e9a\u5a1c 4 \u53f7\u706b\u7bad\u6240\u7528\u8f6f\u4ef6\u7684\u9057\u7559\u90e8\u5206\uff0c\u6309\u7167\u201c\u5982\u679c\u5b83\u6ca1\u6709\u51fa\u4e8b\uff0c\u5c31\u4e0d\u8981\u4fee\u7406\u5b83\u201d\u7684\u683c\u8a00\uff0c\u539f\u5c01\u4e0d\u52a8\u5730\u4fdd\u7559\u4e86\u4e0b\u6765\u3002\u7136\u800c\uff0c\u8bbe\u8ba1\u8005\u6ca1\u6709\u8003\u8651\u5230\uff0c\u5728\u76f8\u5173\u7cfb\u7edf\u6fc0\u6d3b\u7684\u6700\u521d 40 \u79d2\u98de\u884c\u5185\uff0c\u963f\u4e3d\u4e9a\u5a1c 5 \u53f7\u706b\u7bad\u7684\u6c34\u5e73\u901f\u5ea6\u53ef\u80fd\u8fbe\u5230\u963f\u4e3d\u4e9a\u5a1c 4 \u53f7\u706b\u7bad\u7684\u4e94\u500d\u5de6\u53f3\u3002</p>"},{"location":"Part_01/01/#13","title":"1.3 \u6570\u5b57\u53ca\u5176\u7f16\u7801","text":"<p>Number representation methods have advanced in parallel with the evolution of language. The oldest method for representing numbers consisted of the use of stones or sticks. Gradually, as larger numbers were needed, it became difficult to represent them or develop a feeling for their magnitudes. More importantly, comparing large numbers was quite cumbersome. Grouping the stones or sticks (e.g., representing the number 27 by 5 groups of 5 sticks plus 2 single sticks) was only a temporary cure. It was the use of different stones or sticks for representing groups of 5, 10, etc. that produced the first major breakthrough. </p> <p>\u6570\u5b57\u8868\u793a\u65b9\u6cd5\u4e0e\u8bed\u8a00\u7684\u53d1\u5c55\u540c\u6b65\u53d1\u5c55\u3002\u6700\u53e4\u8001\u7684\u8868\u793a\u6570\u5b57\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u77f3\u5934\u6216\u68cd\u5b50\u3002\u6e10\u6e10\u5730\uff0c\u968f\u7740\u9700\u8981\u66f4\u5927\u7684\u6570\u5b57\uff0c\u4ee3\u8868\u5b83\u4eec\u6216\u5bf9\u5b83\u4eec\u7684\u5927\u5c0f\u4ea7\u751f\u611f\u89c9\u53d8\u5f97\u56f0\u96be\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6bd4\u8f83\u5927\u91cf\u7684\u6570\u636e\u662f\u76f8\u5f53\u9ebb\u70e6\u7684\u3002\u5c06\u77f3\u5934\u6216\u68cd\u5b50\u5206\u7ec4\uff08\u4f8b\u5982\uff0c\u7528 5 \u7ec4 5 \u6839\u68cd\u5b50\u52a0 2 \u4e2a\u5355\u68cd\u5b50\u4ee3\u8868\u6570\u5b57 27\uff09\u53ea\u662f\u6682\u65f6\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u6b63\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u77f3\u5934\u6216\u68cd\u68d2\u6765\u4ee3\u8868 5 \u4eba\u300110 \u4eba\u7b49\u4e00\u7ec4\uff0c\u624d\u4ea7\u751f\u4e86\u7b2c\u4e00\u4e2a\u91cd\u5927\u7a81\u7834\u3002</p> <p>The latter method gradually evolved into a symbolic form whereby special symbols were used to denote larger units. A familiar example is the Roman numeral system. The units of this system are 1, 5, 10, 50, 100, 500, 1000, 10 000, and 100 000, denoted by the symbols I, V, X, L, C, D, M, ((I)), and (((I))), respectively. A number is represented by a string of these symbols, arranged in descending order of values from left to right. To shorten some of the cumbersome representations, allowance is made to count a symbol as representing a negative value if it is to the left of a larger symbol. For example, IX is used instead of VIIII to denote the number 9 and LD is used for CCCCL to represent the number 450. </p> <p>\u540e\u4e00\u79cd\u65b9\u6cd5\u9010\u6e10\u6f14\u53d8\u6210\u4e00\u79cd\u7b26\u53f7\u5f62\u5f0f\uff0c\u7528\u7279\u6b8a\u7b26\u53f7\u6765\u8868\u793a\u66f4\u5927\u7684\u5355\u4f4d\u3002\u4e00\u4e2a\u719f\u6089\u7684\u4f8b\u5b50\u662f\u7f57\u9a6c\u6570\u5b57\u7cfb\u7edf\u3002\u8be5\u7cfb\u7edf\u7684\u5355\u4f4d\u4e3a 1\u30015\u300110\u300150\u3001100\u3001500\u30011000\u300110 000 \u548c 100 000\uff0c\u5206\u522b\u7528\u7b26\u53f7 I\u3001V\u3001X\u3001L\u3001C\u3001D\u3001M\u3001((I)) \u548c (((I))) \u8868\u793a\u3002\u6570\u5b57\u7531\u8fd9\u4e9b\u7b26\u53f7\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4ece\u5de6\u5230\u53f3\u6309\u503c\u7684\u964d\u5e8f\u6392\u5217\u3002\u4e3a\u4e86\u7f29\u77ed\u4e00\u4e9b\u7e41\u7410\u7684\u8868\u793a\uff0c\u5982\u679c\u7b26\u53f7\u4f4d\u4e8e\u8f83\u5927\u7b26\u53f7\u7684\u5de6\u4fa7\uff0c\u5219\u5141\u8bb8\u5c06\u5176\u8ba1\u4e3a\u8868\u793a\u8d1f\u503c\u3002\u4f8b\u5982\uff0cIX \u4ee3\u66ff VIII \u6765\u8868\u793a\u6570\u5b57 9\uff0c LD \u4ee3\u66ff CCCCL \u4f7f\u7528\u6765\u8868\u793a\u6570\u5b57 450\u3002</p> <p>Clearly, the Roman numeral system is not suitable for representing very large numbers. Furthermore, it is difficult to do arithmetic on numbers represented with this notation. The  positional  system of number representation was first used by the Chinese. In this method, the value represented by each symbol depends not only on its shape but also on its position relative to other symbols. Our conventional method of representing numbers is based on a positional system. </p> <p>\u663e\u7136\uff0c\u7f57\u9a6c\u6570\u5b57\u7cfb\u7edf\u4e0d\u9002\u5408\u8868\u793a\u975e\u5e38\u5927\u7684\u6570\u5b57\u3002\u6b64\u5916\uff0c\u5f88\u96be\u5bf9\u7528\u8fd9\u79cd\u8868\u793a\u6cd5\u8868\u793a\u7684\u6570\u5b57\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u3002\u6570\u5b57\u8868\u793a\u7684\u4f4d\u7f6e\u7cfb\u7edf\u9996\u5148\u7531\u4e2d\u56fd\u4eba\u4f7f\u7528\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u7b26\u53f7\u6240\u4ee3\u8868\u7684\u503c\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5176\u5f62\u72b6\uff0c\u8fd8\u53d6\u51b3\u4e8e\u5176\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7b26\u53f7\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u8868\u793a\u6570\u5b57\u7684\u4f20\u7edf\u65b9\u6cd5\u57fa\u4e8e\u4f4d\u7f6e\u7cfb\u7edf\u3002</p> <p>For example in the number 222, each of the \u201c2\u201d digits represents a different value.  The leftmost 2 represents 200. The middle 2 represents 20. Finally, the rightmost 2 is worth 2 units. The representation of time intervals in terms of days, hours, minutes, and seconds (i.e., as four-element vectors) is another example of the positional system. For instance, in the vector  T = 5 5 5 5, the leftmost element denotes 5 days, the second from the left represents 5 hours, the third element stands for 5 minutes, and the rightmost element denotes 5 seconds. </p> <p>\u4f8b\u5982\uff0c\u5728\u6570\u5b57 222 \u4e2d\uff0c\u6bcf\u4e2a\u201c2\u201d\u6570\u5b57\u4ee3\u8868\u4e0d\u540c\u7684\u503c\u3002\u6700\u5de6\u8fb9\u76842\u4ee3\u8868200\u3002\u4e2d\u95f4\u76842\u4ee3\u886820\u3002\u6700\u540e\uff0c\u6700\u53f3\u8fb9\u76842\u503c2\u4e2a\u5355\u4f4d\u3002\u4ee5\u5929\u3001\u5c0f\u65f6\u3001\u5206\u949f\u548c\u79d2\uff08\u5373\u56db\u5143\u7d20\u5411\u91cf\uff09\u8868\u793a\u65f6\u95f4\u95f4\u9694\u662f\u4f4d\u7f6e\u7cfb\u7edf\u7684\u53e6\u4e00\u4e2a\u793a\u4f8b\u3002\u4f8b\u5982\uff0c\u5728\u5411\u91cf T = 5 5 5 5 \u4e2d\uff0c\u6700\u5de6\u8fb9\u7684\u5143\u7d20\u8868\u793a 5 \u5929\uff0c\u5de6\u8fb9\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8868\u793a 5 \u5c0f\u65f6\uff0c\u7b2c\u4e09\u4e2a\u5143\u7d20\u8868\u793a 5 \u5206\u949f\uff0c\u6700\u53f3\u8fb9\u7684\u5143\u7d20\u8868\u793a 5 \u79d2\u3002</p> <p>If in a positional number system, the unit corresponding to each position is a constant multiple of the unit for its right neighboring position, the conventional  fixed-radix positional system is obtained. The decimal number system we use daily is a positional number system with 10 as its constant radix. The representation of time intervals, as just discussed, provides an example of a  mixed-radix  positional system for which the radix is the vector  R = 0 24 60 60. </p> <p>\u5982\u679c\u5728\u4f4d\u7f6e\u6570\u5236\u4e2d\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u5355\u4f4d\u662f\u5176\u53f3\u76f8\u90bb\u4f4d\u7f6e\u7684\u5355\u4f4d\u7684\u5e38\u6570\u500d\uff0c\u5219\u5f97\u5230\u4f20\u7edf\u7684\u56fa\u5b9a\u57fa\u6570\u4f4d\u7f6e\u5236\u3002\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684\u5341\u8fdb\u5236\u6570\u5236\u662f\u4ee510\u4e3a\u5e38\u6570\u57fa\u6570\u7684\u4f4d\u7f6e\u6570\u5236\u3002\u6b63\u5982\u521a\u521a\u8ba8\u8bba\u7684\uff0c\u65f6\u95f4\u95f4\u9694\u7684\u8868\u793a\u63d0\u4f9b\u4e86\u6df7\u5408\u57fa\u6570\u4f4d\u7f6e\u7cfb\u7edf\u7684\u793a\u4f8b\uff0c\u5176\u57fa\u6570\u662f\u5411\u91cf R = 0 24 60 60\u3002</p> <p>The method used to represent numbers affects not just the ease of reading and understanding the notation but also the complexity of arithmetic algorithms used for computing with numbers. The popularity of positional number systems is in part due to the availability of simple and elegant algorithms for performing arithmetic on such numbers. We will see in subsequent chapters that other representations provide advantages over the positional representation in terms of certain arithmetic operations or the needs of particular application areas. However, these systems are of limited use precisely because they do not support universally simple arithmetic. </p> <p>\u7528\u4e8e\u8868\u793a\u6570\u5b57\u7684\u65b9\u6cd5\u4e0d\u4ec5\u5f71\u54cd\u9605\u8bfb\u548c\u7406\u89e3\u7b26\u53f7\u7684\u5bb9\u6613\u7a0b\u5ea6\uff0c\u800c\u4e14\u5f71\u54cd\u7528\u4e8e\u6570\u5b57\u8ba1\u7b97\u7684\u7b97\u672f\u7b97\u6cd5\u7684\u590d\u6742\u6027\u3002\u4f4d\u7f6e\u6570\u5b57\u7cfb\u7edf\u7684\u6d41\u884c\u90e8\u5206\u5f52\u56e0\u4e8e\u5bf9\u8fd9\u4e9b\u6570\u5b57\u6267\u884c\u7b97\u672f\u7684\u7b80\u5355\u800c\u4f18\u96c5\u7684\u7b97\u6cd5\u7684\u53ef\u7528\u6027\u3002\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u770b\u5230\uff0c\u5728\u67d0\u4e9b\u7b97\u672f\u8fd0\u7b97\u6216\u7279\u5b9a\u5e94\u7528\u9886\u57df\u7684\u9700\u6c42\u65b9\u9762\uff0c\u5176\u4ed6\u8868\u793a\u6cd5\u6bd4\u4f4d\u7f6e\u8868\u793a\u6cd5\u5177\u6709\u4f18\u52bf\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u7684\u7528\u9014\u662f\u6709\u9650\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u652f\u6301\u666e\u904d\u7b80\u5355\u7684\u7b97\u672f\u3002</p> <p>In digital systems, numbers are encoded by means of binary digits or bits. Suppose you have 4 bits to represent numbers. There are 16 possible codes. You are free to assign the 16 codes to numbers as you please. However, since number representation has significant effects on algorithm and circuit complexity, only some of the wide range of possibilities have found applications. </p> <p>\u5728\u6570\u5b57\u7cfb\u7edf\u4e2d\uff0c\u6570\u5b57\u901a\u8fc7\u4e8c\u8fdb\u5236\u6570\u5b57\u6216\u4f4d\u8fdb\u884c\u7f16\u7801\u3002\u5047\u8bbe\u60a8\u6709 4 \u4f4d\u6765\u8868\u793a\u6570\u5b57\u3002\u6709 16 \u79cd\u53ef\u80fd\u7684\u4ee3\u7801\u3002\u60a8\u53ef\u4ee5\u968f\u610f\u5c06 16 \u4e2a\u4ee3\u7801\u5206\u914d\u7ed9\u53f7\u7801\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6570\u5b57\u8868\u793a\u5bf9\u7b97\u6cd5\u548c\u7535\u8def\u590d\u6742\u6027\u6709\u663e\u7740\u5f71\u54cd\uff0c\u56e0\u6b64\u53ea\u6709\u4e00\u4e9b\u5e7f\u6cdb\u7684\u53ef\u80fd\u6027\u5f97\u5230\u4e86\u5e94\u7528\u3002</p> <p>To simplify arithmetic operations, including the required checking for singularities or special cases, the assignment of codes to numbers must be done in a logical and systematic manner. For example, if you assign codes to 2 and 3 but not to 5, then adding 2 and 3 will cause an \u201coverflow\u201d (yields an unrepresentable value) in your number system. </p> <p>\u4e3a\u4e86\u7b80\u5316\u7b97\u672f\u8fd0\u7b97\uff0c\u5305\u62ec\u6240\u9700\u7684\u5947\u70b9\u6216\u7279\u6b8a\u60c5\u51b5\u68c0\u67e5\uff0c\u5fc5\u987b\u4ee5\u903b\u8f91\u548c\u7cfb\u7edf\u7684\u65b9\u5f0f\u5c06\u4ee3\u7801\u5206\u914d\u7ed9\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5c06\u4ee3\u7801\u5206\u914d\u7ed9 2 \u548c 3 \u800c\u4e0d\u662f 5\uff0c\u5219\u6dfb\u52a0 2 \u548c 3 \u5c06\u5bfc\u81f4\u6570\u5b57\u7cfb\u7edf\u4e2d\u7684\u201c\u6ea2\u51fa\u201d\uff08\u4ea7\u751f\u65e0\u6cd5\u8868\u793a\u7684\u503c\uff09\u3002</p> <p>Figure 1.2 shows some examples of assignments of 4-bit codes to numbers. The first choice is to interpret the 4-bit patterns as 4-bit binary numbers, leading to the representation of natural numbers in the range [0, 15]. The signed-magnitude scheme results in integers in the range [\u22127, 7] being represented, with 0 having two representations, (viz., \u00b10). The 3-plus-1 fixed-point number system (3 whole bits, 1 fractional bit) gives us numbers from 0 to 7.5 in increments of 0.5. Viewing the 4-bit codes as signed fractions gives us a range of [\u22120.875, +0.875] or [\u22121, +0.875], depending on whether we use signed-magnitude or 2\u2019s-complement representation. </p> <p>\u56fe 1.2 \u663e\u793a\u4e86\u5c06 4 \u4f4d\u4ee3\u7801\u5206\u914d\u7ed9\u6570\u5b57\u7684\u4e00\u4e9b\u793a\u4f8b\u3002\u7b2c\u4e00\u4e2a\u9009\u62e9\u662f\u5c06 4 \u4f4d\u6a21\u5f0f\u89e3\u91ca\u4e3a 4 \u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ece\u800c\u5f97\u5230 [0, 15] \u8303\u56f4\u5185\u7684\u81ea\u7136\u6570\u8868\u793a\u3002\u5e26\u7b26\u53f7\u6570\u503c\u65b9\u6848\u5bfc\u81f4\u8868\u793a [\u22127, 7] \u8303\u56f4\u5185\u7684\u6574\u6570\uff0c\u5176\u4e2d 0 \u6709\u4e24\u79cd\u8868\u793a\u5f62\u5f0f\uff08\u5373\u00b10\uff09\u3002 3+1 \u5b9a\u70b9\u6570\u7cfb\u7edf\uff083 \u4e2a\u6574\u6570\u4f4d\uff0c1 \u4e2a\u5c0f\u6570\u4f4d\uff09\u4e3a\u6211\u4eec\u63d0\u4f9b\u4ece 0 \u5230 7.5 \u7684\u6570\u5b57\uff0c\u589e\u91cf\u4e3a 0.5\u3002\u5c06 4 \u4f4d\u4ee3\u7801\u89c6\u4e3a\u6709\u7b26\u53f7\u5206\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 [\u22120.875, +0.875] \u6216 [\u22121, +0.875] \u7684\u8303\u56f4\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6211\u4eec\u662f\u4f7f\u7528\u7b26\u53f7\u5e45\u5ea6\u8868\u793a\u8fd8\u662f 2 \u7684\u8865\u7801\u8868\u793a\u3002</p> <p>The 2-plus-2 unsigned floating-point number system in Fig. 1.2, with its 2-bit exponent  e  in {\u22122, \u22121, 0, 1} and 2-bit integer significand  s  in {0, 1, 2, 3}, can represent certain values  s \u00d7 2 e  in [0, 6]. In this system, 0.00 has four representations, 0.50, 1.00, and 2.00 have two representations each, and 0.25, 0.75, 1.50, 3.00, 4.00, and 6.00 are uniquely represented. The 2-plus-2 logarithmic number system, which represents a number by approximating its 2-plus-2, fixed-point, base-2 logarithm, completes the choices shown in Fig. 1.2. </p> <p>\u56fe 1.2 \u4e2d\u7684 2+2 \u65e0\u7b26\u53f7\u6d6e\u70b9\u6570\u7cfb\u7edf\uff0c\u5176 2 \u4f4d\u6307\u6570 e \u5728 {\u22122, \u22121, 0, 1} \u4e2d\uff0c2 \u4f4d\u6574\u6570\u6709\u6548\u6570 s \u5728 {0, 1, 2, 3} \u4e2d\uff0c\u53ef\u4ee5\u8868\u793a [0, 6] \u4e2d\u7684\u67d0\u4e9b\u503c \\(s \\times 2^e\\)\u3002\u5728\u6b64\u7cfb\u7edf\u4e2d\uff0c0.00 \u6709\u56db\u79cd\u8868\u793a\u5f62\u5f0f\uff1a0.50\u30011.00 \u548c 2.00\u6bcf\u4e2a\u90fd\u6709\u4e24\u79cd\u8868\u793a\u5f62\u5f0f\uff0c0.25\u30010.75\u30011.50\u30013.00\u30014.00 \u548c 6.00 \u662f\u552f\u4e00\u8868\u793a\u7684\u3002 2+2 \u5bf9\u6570\u7cfb\u7edf\u901a\u8fc7\u8fd1\u4f3c 2+2\u3001\u5b9a\u70b9\u3001\u4ee5 2 \u4e3a\u5e95\u7684\u5bf9\u6570\u6765\u8868\u793a\u4e00\u4e2a\u6570\uff0c\u5b8c\u6210\u4e86\u56fe 1.2 \u4e2d\u6240\u793a\u7684\u9009\u62e9\u3002</p> <p></p>"},{"location":"Part_01/01/#14","title":"1.4 \u56fa\u5b9a\u57fa\u6570\u4f4d\u7f6e\u6570\u5b57\u7cfb\u7edf","text":"<p>A conventional fixed-radix, fixed-point positional number system is usually based on a positive integer  radix (base)  r  and an implicit digit set {\\(0, 1, \u00b7 \u00b7 \u00b7 ,  r \u2212 1\\)}. Each unsigned integer is represented by a digit vector of length  k +  l, with  k  digits for the whole part and  l  digits for the fractional part. By convention, the digit vector \\(x_{k\u22121} x_{k\u22122} \u00b7 \u00b7 \u00b7 x_1 x_0. x_{\u22121} x_{\u22122} \u00b7 \u00b7 \u00b7 x_{\u2212l}\\) represents the value</p> <p>\u4f20\u7edf\u7684\u5b9a\u57fa\u3001\u5b9a\u70b9\u4f4d\u7f6e\u6570\u7cfb\u7edf\u901a\u5e38\u57fa\u4e8e\u6b63\u6574\u6570\u57fa\u6570\uff08\u5e95\u6570base\uff09\\(r\\) \u548c\u9690\u5f0f\u6570\u5b57\u96c6{\\(0, 1, \u00b7\u00b7\u00b7, r \u2212 1\\)}\u3002\u6bcf\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u90fd\u7531\u957f\u5ea6\u4e3a \\(k + l\\) \u7684\u6570\u5b57\u5411\u91cf\u8868\u793a\uff0c\u5176\u4e2d \\(k\\) \u8868\u793a\u6574\u6570\u957f\u5ea6\uff0c\\(l\\) \u4f4d\u8868\u793a\u5c0f\u6570\u90e8\u5206\u957f\u5ea6\u3002\u6309\u7167\u60ef\u4f8b\uff0c\u6570\u5b57\u5411\u91cf \\(x_{k\u22121} x_{k\u22122} \u00b7 \u00b7 \u00b7 x_1 x_0. x_{\u22121} x_{\u22122} \u00b7 \u00b7 \u00b7 x_{\u2212l}\\) \u8868\u793a\u503c</p> \\[ (x_{k-1}x_{k-2}\\cdots x_1x_0 . x_{-1}x_{-2}\\cdots x_{-l})_r = \\sum_{i=-l}^{k-1}x_ir^i \\] <p>One can easily generalize to arbitrary radices (not necessarily integer or positive or constant) and digit sets of arbitrary size or composition. In what follows, we restrict our attention to digit sets composed of consecutive integers, since digit sets of other types complicate arithmetic and have no redeeming property. Thus, we denote our digit set by {\u2212 \u03b1, \u2212 \u03b1 + 1, \u00b7 \u00b7 \u00b7 ,  \u03b2 \u2212 1,  \u03b2} = [\u2212 \u03b1,  \u03b2]. </p> <p>\u4eba\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a8\u5e7f\u5230\u4efb\u610f\u57fa\u6570\uff08\u4e0d\u4e00\u5b9a\u662f\u6574\u6570\u3001\u6b63\u6570\u6216\u5e38\u6570\uff09\u548c\u4efb\u610f\u5927\u5c0f\u6216\u7ec4\u6210\u7684\u6570\u5b57\u96c6\u3002\u5728\u4e0b\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u6ce8\u610f\u529b\u9650\u5236\u5728\u7531\u8fde\u7eed\u6574\u6570\u7ec4\u6210\u7684\u6570\u5b57\u96c6\u4e0a\uff0c\u56e0\u4e3a\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u5b57\u96c6\u4f7f\u7b97\u672f\u590d\u6742\u5316\u5e76\u4e14\u6ca1\u6709\u53ef\u8d4e\u56de\u7684\u5c5e\u6027\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u6570\u5b57\u96c6\u8868\u793a\u4e3a {\u2212\u03b1,\u2212\u03b1+1,\u00b7\u00b7\u00b7,\u03b2\u22121,\u03b2}=[\u2212\u03b1,\u03b2]\u3002</p> <p>The following examples demonstrate the wide range of possibilities in selecting the radix and digit set. </p> <p>\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u9009\u62e9\u57fa\u6570\u548c\u6570\u5b57\u96c6\u7684\u5e7f\u6cdb\u53ef\u80fd\u6027\u3002</p> <p>EXAMPLE 1.1 Balanced ternary number system: r = 3, digit set = [\u22121, 1].</p> <p>\u793a\u4f8b1.1 \u5e73\u8861\u4e09\u8fdb\u5236\u6570\u7cfb\u7edf\uff1ar = 3\uff0c\u6570\u5b57\u96c6= [\u22121, 1]\u3002</p> <p>EXAMPLE 1.2 Negative-radix number systems: radix \\(\u2212r\\), digit set = [0, r \u2212 1].</p> <p>\u793a\u4f8b1.2 \u8d1f\u57fa\u6570\u7cfb\u7edf\uff1a\u57fa\u6570 \\(-r\\)\uff0c\u6570\u5b57\u96c6= [\\(0, r \u2212 1\\)]\u3002</p> \\[ \\begin{array}{l} (\\cdots x_5x_4x_3x_2x_1x_0 . x_{-1}x_{-2}x_{-3}x_{-4}x_{-5}x_{-6} \\cdots) = \\sum_{i}x_i(-r)^i \\\\ =\\sum_{\\text{even }i}x_ir^i - \\sum_{\\text{odd }i}x_ir^i \\\\ =(\\cdots x_4x_2x_0 . x_{-2}x_{-4}x_{-6} \\cdots)_r - (\\cdots x_5x_3x_1 . x_{-1}x_{-3}x_{-5} \\cdots)_r \\end{array} \\] <p>r = \u22122 \u4e14\u6570\u5b57\u96c6\u4e3a [0, 1] \u7684\u7279\u6b8a\u60c5\u51b5\u79f0\u4e3a\u8d1f\u4e8c\u8fdb\u5236\u6570\u7cfb</p> <p>EXAMPLE 1.3 Nonredundant signed-digit number systems: digit set [\u2212 \u03b1,  r \u2212 1 \u2212  \u03b1] for radix  r. As an example, one can use the digit set [\u22124, 5] for  r = 10. We denote a negative digit by preceding it with a minus sign, as usual, or by using a hyphen as a left superscript when the minus sign could be mistaken for subtraction. For example, </p> <p>\\((3\\ ^-1\\ 5 )_{ten}\\)  represents the decimal number  295 =   300 \u2212 10 + 5</p> <p>\\((^-3\\ 1\\ 5)_{ten}\\) represents the decimal number \u2212285 = \u2212300 + 10 + 5</p> <p>\u793a\u4f8b1.3 \u975e\u5197\u4f59\u5e26\u7b26\u53f7\u6570\u5b57\u7cfb\u7edf\uff1a\u57fa\u6570\\(r\\)\u7684\u6570\u5b57\u96c6[\u2212 \u03b1, r\u22121\u2212 \u03b1]\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0cr = 10 \u65f6\u53ef\u4ee5\u4f7f\u7528\u6570\u5b57\u96c6 [\u22124, 5]\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u901a\u8fc7\u5728\u8d1f\u6570\u524d\u9762\u52a0\u4e0a\u51cf\u53f7\u6765\u8868\u793a\u8d1f\u6570\uff0c\u6216\u8005\u5f53\u51cf\u53f7\u53ef\u80fd\u88ab\u8bef\u8ba4\u4e3a\u662f\u51cf\u6cd5\u65f6\uff0c\u4f7f\u7528\u8fde\u5b57\u7b26\u4f5c\u4e3a\u5de6\u4e0a\u6807\u3002\u4f8b\u5982\uff0c</p> <p>\\((3\\ ^-1\\ 5 )_{ten}\\)\u200b \u8868\u793a\u5341\u8fdb\u5236\u6570   295 =   300 \u2212 10 + 5</p> <p>\\((^-3\\ 1\\ 5)_{ten}\\) \u8868\u793a\u5341\u8fdb\u5236\u6570 \u2212285 = \u2212300 + 10 + 5</p> <p>EXAMPLE 1.4 Redundant signed-digit number systems: digit set [\u2212 \u03b1,  \u03b2], with  \u03b1+ \u03b2 \u2265  r for radix  r. One can use the digit set [\u22127, 7], say, for  r = 10. In such redundant number systems, certain values may have multiple representations. For example, here are some representations for the decimal number 295:</p> <p>\u793a\u4f8b1.4 \u5197\u4f59\u6709\u7b26\u53f7\u6570\u5b57\u7cfb\u7edf\uff1a\u6570\u5b57\u96c6[\u2212 \u03b1, \u03b2]\uff0c\u5176\u4e2d\u03b1+ \u03b2 \u2265 r \u4e3a\u57fa\u6570r\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e r = 10\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u5b57\u96c6 [\u22127, 7]\u3002\u5728\u8fd9\u79cd\u5197\u4f59\u6570\u5b57\u7cfb\u7edf\u4e2d\uff0c\u67d0\u4e9b\u503c\u53ef\u80fd\u6709\u591a\u79cd\u8868\u793a\u5f62\u5f0f\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f\u5341\u8fdb\u5236\u6570 295 \u7684\u4e00\u4e9b\u8868\u793a\u5f62\u5f0f\uff1a</p> \\[ (3\\ ^-1\\ 5)_{ten} =  (3\\ 0\\ ^-5)_{ten} =  (1\\ ^-7\\ 0\\ ^-5 )_{ten} \\] <p>\u6211\u4eec\u5c06\u5728\u7b2c 3 \u7ae0\u8be6\u7ec6\u7814\u7a76\u5197\u4f59\u8868\u793a\u3002</p> <p>EXAMPLE 1.5 Fractional radix number systems:  r = 0.1 with digit set [0, 9]. </p> <p>\u793a\u4f8b1.5 \u5c0f\u6570\u57fa\u6570\u7cfb\u7edf\uff1ar = 0.1\uff0c\u6570\u5b57\u96c6\u4e3a[0, 9]\u3002</p> \\[ \\begin{array}{l} (x_{k\u22121} x_{k\u22122} \\cdots  x_1 x_0 .  x_{\u22121}x_{\u22122} \\cdots  x_{\u2212l})_{one-tenth} = \\sum_{i}10^{-i} \\\\ =(x_{\u2212l}\\cdots x_{\u22122}x_{\u22121}x_0 . x_1 \\cdots x_{k\u22122} x_{k\u22121})_{ten} \\end{array} \\] <p>EXAMPLE 1.6 Irrational radix number systems:  r = \\(\\sqrt{2}\\) with digit set [0, 1]. </p> <p>\u793a\u4f8b1.6 \u65e0\u7406\u57fa\u6570\u7cfb\u7edf\uff1ar = \\(\\sqrt{2}\\)\uff0c\u6570\u5b57\u96c6\u4e3a[0, 1]\u3002</p> \\[ \\begin{array}{l} (\\cdots x_5x_4x_3x_2x_1x_0 . x_{-1}x_{-2}x_{-3}x_{-4}x_{-5}x_{-6} \\cdots)_{\\sqrt2} = \\sum_{i}x_i(\\sqrt{2})^i \\\\ =(\\cdots x_4x_2x_0 . x_{-2}x_{-4}x_{-6} \\cdots)_2 + \\sqrt2(\\cdots x_5x_3x_1 . x_{-1}x_{-3}x_{-5} \\cdots)_2 \\end{array} \\] <p>These examples illustrate the generality of our definition by introducing negative, fractional, and irrational radices and by using both nonredundant or minimal ( r  different digit values) and redundant ( &gt; r  digit values) digit sets in the common case of positive integer radices. We can go even further and make the radix an imaginary or complex number. </p> <p>\u8fd9\u4e9b\u793a\u4f8b\u901a\u8fc7\u5f15\u5165\u8d1f\u6570\u3001\u5c0f\u6570\u548c\u65e0\u7406\u6570\u57fa\u6570\uff0c\u5e76\u5728\u6b63\u6574\u6570\u7684\u5e38\u89c1\u60c5\u51b5\u4e0b\u4f7f\u7528\u975e\u5197\u4f59\u6216\u6700\u5c0f\uff08r \u4e2a\u4e0d\u540c\u7684\u6570\u5b57\u503c\uff09\u548c\u5197\u4f59\uff08&gt; r \u4e2a\u6570\u5b57\u503c\uff09\u6570\u5b57\u96c6\u6765\u8bf4\u660e\u6211\u4eec\u5b9a\u4e49\u7684\u4e00\u822c\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\uff0c\u5c06\u57fa\u6570\u8bbe\u4e3a\u865a\u6570\u6216\u590d\u6570\u3002</p> <p>EXAMPLE 1.7 Complex-radix number systems: the quater-imaginary number system uses  \\(r = 2 j\\), where  \\(j = \\sqrt{-1}\\) and the digit set [0, 3]. </p> <p>\u793a\u4f8b 1.7 \u590d\u6570\u57fa\u6570\u7cfb\u7edf\uff1a\u56db\u865a\u6570\u7cfb\u7edf\u4f7f\u7528\\(r = 2 j\\)\uff0c\u5176\u4e2d\\(j = \\sqrt{-1}\\)  \u4ee5\u53ca\u6570\u5b57\u96c6 [0, 3]\u3002</p> \\[ \\begin{array}{l} (\\cdots x_5x_4x_3x_2x_1x_0 . x_{-1}x_{-2}x_{-3}x_{-4}x_{-5}x_{-6} \\cdots)_{2j} = \\sum_{i}x_i(2j)^i \\\\ =(\\cdots x_4x_2x_0 . x_{-2}x_{-4}x_{-6} \\cdots)_{-four} + 2j(\\cdots x_5x_3x_1 . x_{-1}x_{-3}x_{-5} \\cdots)_{four} \\end{array} \\] <p>It is easy to see that any complex number can be represented in the quater-imaginary number system of Example 1.7, with the advantage that ordinary addition (with a slightly modified carry rule) and multiplication can be used for complex-number computations. The modified carry rule is that a carry of \u22121 (a borrow actually) goes two positions to the left when the position sum, or digit total in a given position, exceeds 3. </p> <p>\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u4efb\u4f55\u590d\u6570\u90fd\u53ef\u4ee5\u7528\u4f8b 1.7 \u7684\u56db\u865a\u6570\u7cfb\u7edf\u8868\u793a\uff0c\u5176\u4f18\u70b9\u662f\u666e\u901a\u52a0\u6cd5\uff08\u7a0d\u5fae\u4fee\u6539\u8fdb\u4f4d\u89c4\u5219\uff09\u548c\u4e58\u6cd5\u53ef\u7528\u4e8e\u590d\u6570\u8ba1\u7b97s\u3002\u4fee\u6539\u540e\u7684\u8fdb\u4f4d\u89c4\u5219\u662f\uff0c\u5f53\u4f4d\u7f6e\u603b\u548c\u6216\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u6570\u5b57\u603b\u6570\u8d85\u8fc7 3 \u65f6\uff0c\u8fdb\u4f4d -1\uff08\u5b9e\u9645\u4e0a\u662f\u501f\u4f4d\uff09\u4f1a\u5411\u5de6\u79fb\u52a8\u4e24\u4e2a\u4f4d\u7f6e\u3002</p> <p>In radix  r, with the standard digit set [0,  r \u2212 1], the number of digits needed to represent the natural numbers in [0,  max] is</p> <p>\u5728\u57fa\u6570 r \u4e2d\uff0c\u4f7f\u7528\u6807\u51c6\u6570\u5b57\u96c6 [0, r \u2212 1]\uff0c\u8868\u793a [0, max] \u4e2d\u7684\u81ea\u7136\u6570\u6240\u9700\u7684\u4f4d\u6570\u4e3a</p> \\[ k=\\left \\lfloor \\log_rmax \\right \\rfloor + 1  = \\left \\lceil \\log_r(max+1) \\right \\rceil \\] <p>Note that the number of different values represented is  max + 1. </p> <p>\u8bf7\u6ce8\u610f\uff0c\u8868\u793a\u7684\u4e0d\u540c\u503c\u7684\u6570\u91cf\u4e3a max + 1\u3002</p> <p>With fixed-point representation using  k  whole and  l  fractional digits, we have </p> <p>\u5bf9\u4e8e\u4f7f\u7528 k \u4e2a\u6574\u6570\u548c l \u4e2a\u5c0f\u6570\u4f4d\u7684\u5b9a\u70b9\u8868\u793a\uff0c\u6211\u4eec\u6709</p> \\[ max = r^k \u2212 r^{\u2212l} = r^k \u2212 ulp \\] <p>We will find the term  ulp, for the unit in least (significant) position, quite useful in describing certain arithmetic concepts without distinguishing between integers and fixed-point representations that include fractional parts. For integers,  ulp = 1. </p> <p>\u6211\u4eec\u4f1a\u53d1\u73b0\u672f\u8bed ulp\u8868\u793a\u7684\u662f\u6700\u5c0f\uff08\u6709\u6548\uff09\u4f4d\u7f6e\u7684\u5355\u4f4d\uff0c\u5728\u63cf\u8ff0\u67d0\u4e9b\u7b97\u672f\u6982\u5ff5\u65f6\u975e\u5e38\u6709\u7528\uff0c\u800c\u65e0\u9700\u533a\u5206\u6574\u6570\u548c\u5305\u542b\u5c0f\u6570\u90e8\u5206\u7684\u5b9a\u70b9\u8868\u793a\u3002\u5bf9\u4e8e\u6574\u6570\uff0culp = 1\u3002</p> <p>Specification of time intervals in terms of weeks, days, hours, minutes, seconds, and milliseconds is an example of mixed-radix representation. Given the two-part radix vector \u00b7 \u00b7 \u00b7  \\(r_3 r_2 r_1 r_0;  r_{\u22121} r_{\u22122}\\)\u00b7 \u00b7 \u00b7 defining the mixed radix, the two-part digit vector \\(\\cdots x_3 x_2 x_1 x_0;  x_{\u22121} x_{\u22122} \\cdots\\) represents the value.</p> <p>\u4ee5\u5468\u3001\u5929\u3001\u5c0f\u65f6\u3001\u5206\u949f\u3001\u79d2\u548c\u6beb\u79d2\u6765\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u662f\u6df7\u5408\u57fa\u6570\u8868\u793a\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u7ed9\u5b9a\u4e24\u90e8\u5206\u57fa\u5411\u91cf\\(\\cdots r_3 r_2 r_1 r_0;  r_{\u22121} r_{\u22122} \\cdots\\)\u5b9a\u4e49\u6df7\u5408\u57fa\u6570\uff0c\u548c\u4e24\u90e8\u5206\u6570\u5b57\u5411\u91cf\\(\\cdots x_3 x_2 x_1 x_0;  x_{\u22121} x_{\u22122} \\cdots\\) \u8868\u793a\u503c\u662f</p> <p>$$ \\cdots x_3r_2r_1r_0+x_2r_1r_0+x_1r_0+x0+\\frac{x_{-1}}{r_{-1}}+\\frac{x_{-2}}{r_{-1}r_{-2}}+ \\cdots $$ In the time interval example, the mixed radix is \u00b7 \u00b7 \u00b7 7, 24, 60, 60; 1000 \u00b7 \u00b7 \u00b7 and the digit vector 3, 2, 9, 22, 57; 492 (3 weeks, 2 days, 9 hours, 22 minutes, 57 seconds, and 492 milliseconds) represents</p> <p>\u65f6\u95f4\u95f4\u9694\u793a\u4f8b\u4e2d\uff0c\u6df7\u5408\u57fa\u6570\u4e3a\u2026\u20267\u300124\u300160\u300160\uff1b 1000\u00b7\u00b7\u00b7\u4ee5\u53ca\u6570\u5b57\u5411\u91cf3\u30012\u30019\u300122\u300157\uff1b 492\uff083\u54682\u59299\u5c0f\u65f622\u520657\u79d2\uff0c492\u6beb\u79d2\uff09\u4ee3\u8868\u7684\u662f</p> \\[ \\begin{array}{l} (3\u00d77\u00d724\u00d760\u00d760)+(2\u00d724\u00d760\u00d760)+(9\u00d760\u00d760)+(22\u00d760) \\\\ + 57 + 492 / 1000 = 2 020 977.492 \\text{ \u79d2} \\end{array} \\] <p>In Chapter 4, we will see that mixed-radix representation plays an important role in dealing with values represented in residue number systems. </p> <p>\u5728\u7b2c 4 \u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u6df7\u5408\u57fa\u6570\u8868\u793a\u5728\u5904\u7406\u4f59\u6570\u7cfb\u7edf\u4e2d\u8868\u793a\u7684\u503c\u65f6\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002</p>"},{"location":"Part_01/01/#15","title":"1.5 \u6570\u5b57\u57fa\u6570\u8f6c\u6362","text":"<p>Assuming that the unsigned value  u  has exact representations in radices  r  and  R, we can write:</p> <p>\u5047\u8bbe\u65e0\u7b26\u53f7\u503c u \u5728\u57fa\u6570 r \u548c R \u4e2d\u5177\u6709\u7cbe\u786e\u8868\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\uff1a</p> \\[ \\begin{array}{l} u &amp;= w \\cdot v \\\\   &amp;= (x_{k\u22121}x_{k\u22122} \\cdots x_1x_0 . x_{\u22121}x_{\u22122} \\cdots x_{\u2212l})_r \\\\   &amp;= (X_{K\u22121}X_{K\u22122} \\cdots X_1X_0 . X_{\u22121}X_{\u22122} \\cdots X_{\u2212L})R \\end{array} \\] <p>If an exact representation does not exist in one or both of the radices, the foregoing equalities will be approximate. </p> <p>\u5982\u679c\u5728\u4e00\u4e2a\u6216\u4e24\u4e2a\u57fa\u4e2d\u4e0d\u5b58\u5728\u7cbe\u786e\u8868\u793a\uff0c\u5219\u524d\u8ff0\u7b49\u5f0f\u5c06\u662f\u8fd1\u4f3c\u7684\u3002</p> <p>\u57fa\u6570\u8f6c\u6362\u95ee\u9898\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ \\begin{array}{l} \\text{\u7ed9\u5b9a }  &amp; r &amp;\\text{\u65e7\u7684\u57fa\u6570} \\\\              &amp; R &amp;\\text{\u65b0\u7684\u57fa\u6570\uff0c\u4ee5\u53ca} \\\\              &amp; x_is &amp;\\text{\u57fa\u6570r\u8868\u793au\u7684\u7684\u6570\u5b57} \\\\ \\text{\u627e\u51fa } &amp; X_is &amp;\\text{\u57fa\u6570R\u8868\u793au\u7684\u7684\u6570\u5b57} \\end{array} \\] <p>In the rest of this section, we will describe two methods for radix conversion based on doing the arithmetic in the old radix r or in the new radix R. We will also present a shortcut method, involving very little computation, that is applicable when the old and new radices are powers of the same number (e.g., 8 and 16, which are both powers of 2).</p> <p>Note that in converting u from radix r to radix R, where r and R are positive integers, we can convert the whole and fractional parts separately. This is because an integer (fraction) is an integer (fraction), independent of the number representation radix.</p> <p>\u5728\u672c\u8282\u7684\u5176\u4f59\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u63cf\u8ff0\u4e24\u79cd\u57fa\u4e8e\u65e7\u57fa\u6570 r \u6216\u65b0\u57fa\u6570 R \u8fdb\u884c\u7b97\u672f\u7684\u57fa\u6570\u8f6c\u6362\u65b9\u6cd5\u3002\u6211\u4eec\u8fd8\u5c06\u4ecb\u7ecd\u4e00\u79cd\u6377\u5f84\u65b9\u6cd5\uff0c\u6d89\u53ca\u5f88\u5c11\u7684\u8ba1\u7b97\uff0c\u9002\u7528\u4e8e\u65e7\u57fa\u6570\u548c\u65b0\u57fa\u6570\u662f\u76f8\u540c\u6570\u5b57\u7684\u5e42\uff08\u4f8b\u5982 8 \u548c 16\uff0c\u5b83\u4eec\u90fd\u662f 2 \u7684\u5e42\uff09\u7684\u60c5\u51b5\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u5c06 u \u4ece\u57fa\u6570 r \u8f6c\u6362\u4e3a\u57fa\u6570 R \u65f6\uff0c\u5176\u4e2d r \u548c R \u662f\u6b63\u6574\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u8f6c\u6362\u6574\u6570\u90e8\u5206\u548c\u5c0f\u6570\u90e8\u5206\u3002\u8fd9\u662f\u56e0\u4e3a\u6574\u6570\uff08\u5c0f\u6570\uff09\u5c31\u662f\u6574\u6570\uff08\u5c0f\u6570\uff09\uff0c\u4e0e\u6570\u5b57\u8868\u793a\u57fa\u6570\u65e0\u5173\u3002</p> <p>Doing the arithmetic in the old radix r</p> <p>We use this method when radix- r  arithmetic is more familiar or efficient. The method is useful, for example, when we do manual computations and the old radix is  r = 10. The procedures for converting the whole and fractional parts, along with their justifications or proofs, are given below. </p>"},{"location":"Part_01/01/#r","title":"\u7528\u65e7\u57fa\u6570 r \u8fdb\u884c\u7b97\u672f\u8fd0\u7b97","text":"<p>\u5f53 radix-r \u7b97\u672f\u66f4\u719f\u6089\u6216\u66f4\u6709\u6548\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u6b64\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u8fdb\u884c\u624b\u52a8\u8ba1\u7b97\u5e76\u4e14\u65e7\u57fa\u6570\u4e3a r = 10 \u65f6\uff0c\u8be5\u65b9\u6cd5\u5f88\u6709\u7528\u3002\u4e0b\u9762\u7ed9\u51fa\u8f6c\u6362\u6574\u6570\u90e8\u5206\u548c\u5c0f\u6570\u90e8\u5206\u7684\u8fc7\u7a0b\u53ca\u5176\u7406\u7531\u6216\u8bc1\u660e\u3002</p> <p>Converting the whole part w</p> <p>Procedure: Repeatedly divide the integer  \\(w = (x_{k\u22121} x_{k\u22122} \u00b7 \u00b7 \u00b7 x_1 x_0 )_r\\)   by the radix- r representation of  R. The remainders are the  Xi s, with  X 0 generated first. </p> <p>Justification: \\((X_{K\u22121} X_{K\u22122} \u00b7 \u00b7 \u00b7 X_1 X_0)_R \u2212 (X_0)_R\\)  is divisible by  R. Therefore,  X 0 is the remainder of dividing the integer  \\(w = (x_{k\u22121} x_{k\u22122} \u00b7 \u00b7 \u00b7 x_1 x_0 )_r\\)  by the radix- r representation of  R. </p> <p>Example: \\(( 105 )_{ten} = (?)_{five}\\)</p> <p>\u8f6c\u6362\u6574\u6570\u90e8\u5206w</p> <p>\u8fc7\u7a0b\uff1a \u91cd\u590d\u5c06\u6574\u6570 \\(w = (x_{k\u22121} x_{k\u22122} \u00b7 \u00b7 \u00b7 x_1 x_0 )_r\\) \u9664\u4ee5 R \u7684\u57fa\u6570 r \u8868\u793a\u3002\u4f59\u6570\u662f \\(X_i\\)\uff0c\u9996\u5148\u751f\u6210 \\(X_0\\)\u3002</p> <p>\u7406\u7531\uff1a \\((X_{K\u22121} X_{K\u22122} \u00b7 \u00b7 \u00b7 X_1 X_0)_R \u2212 (X_0)_R\\) \u53ef\u88ab R \u6574\u9664\u3002\u56e0\u6b64\uff0c\\(X_0\\) \u662f\u57fa\u6570 r \u8868\u793a\u7684\u6574\u6570 \\(w = (x_{k\u22121} x_{k\u22122} \u00b7 \u00b7 \u00b7 x_1 x_0 )_r\\)  \u9664\u4ee5 R \u7684\u4f59\u6570\u3002</p> <p>\u793a\u4f8b\uff1a\\(( 105 )_{10} = (?)_{5}\\)</p> <p>\u91cd\u590d\u9664\u4ee5 5\uff1a</p> \u5546 \u4f59 105 0 21 1 4 4 0 <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff1a\\((105)_{10}\uff1d(410)_5\\)\u3002</p> <p>Converting the fractional part v</p> <p>Procedure: Repeatedly multiply the fraction  \\(v = (. x_{\u22121} x_{\u22122} \\cdots x_{\u2212l})_r\\) by the radix- r representation of  R. In each step, remove the whole part before multiplying again. The whole parts obtained are the  Xi s, with  X\u22121 generated first. </p> <p>Justification: \\(R \u00d7 ( 0. X_{\u22121} X_{\u22122} \\cdots X_{\u2212L})_R = (X_{\u22121}. X_{\u22122} \\cdots X_{\u2212L})_R\\) </p> <p>Example: ( 105.486 ) ten =  ( 410.?  ) five Repeatedly multiply by 5:</p> <p>\u8f6c\u6362\u5c0f\u6570\u90e8\u5206 v</p> <p>\u8fc7\u7a0b\uff1a\u5c06\u5206\u6570 \\(v = (. x_{\u22121} x_{\u22122} \\cdots x_{\u2212l})_r\\) \u4e0e R \u7684\u57fa\u6570 r \u8868\u793a\u91cd\u590d\u76f8\u4e58\u3002\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u5728\u518d\u6b21\u76f8\u4e58\u4e4b\u524d\u5220\u9664\u6574\u6570\u90e8\u5206\u3002\u83b7\u5f97\u7684\u6574\u6570\u90e8\u5206\u662f \\(X_i\\) \uff0c\u9996\u5148\u751f\u6210 \\(X_{\u22121}\\) \u3002</p> <p>\u7406\u7531\uff1a\\(R \u00d7 ( 0. X_{\u22121} X_{\u22122} \\cdots X_{\u2212L})_R = (X_{\u22121}. X_{\u22122} \\cdots X_{\u2212L})_R\\)\u3002</p> <p>\u793a\u4f8b\uff1a\\((105.486)_{10} = (410.?)_{5}\\) </p> <p>\u91cd\u590d\u4e58\u4ee5 5\uff1a</p> \u6574\u4f53\u90e8\u5206 \u5c0f\u6570 .486 2 .430 2 .150 0 .750 3 .750 3 .750 <p>\u7531\u4e0a\u53ef\u77e5\uff0c\\(( 105.486 )_{10} \\approx ( 410.220 33 )_{5}\\)\u3002</p> <p>Doing the arithmetic in the new radix  *R*</p> <p>We use this method when radix- R  arithmetic is more familiar or efficient. The method is useful, for example, when we manually convert numbers to radix 10. Again, the whole and fractional parts are converted separately. </p>"},{"location":"Part_01/01/#r_1","title":"\u7528\u65b0\u57fa\u6570 R \u8fdb\u884c\u7b97\u672f\u8fd0\u7b97","text":"<p>\u5f53\u57fa R \u7b97\u672f\u66f4\u719f\u6089\u6216\u66f4\u9ad8\u6548\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u6b64\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u5f88\u6709\u7528\uff0c\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u624b\u52a8\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u57fa\u6570 10 \u65f6\u3002\u540c\u6837\uff0c\u6574\u6570\u90e8\u5206\u548c\u5c0f\u6570\u90e8\u5206\u662f\u5206\u5f00\u8f6c\u6362\u7684\u3002</p> <p>Converting the whole part w</p> <p>Procedure: Use repeated multiplications by  r  followed by additions according to the formula  ((\u00b7 \u00b7 \u00b7  ((xk\u22121 r +  xk\u22122 )r +  xk\u22123 )r + \u00b7 \u00b7 \u00b7  )r +  x 1 )r +  x 0. </p> <p>Justification: The given formula is the well-known Horner\u2019s method (or rule), first presented in the early nineteenth century, for the evaluation of the  (k \u2212 1 ) th-degree polynomial  xk\u22121 rk\u22121 +  xk\u22122 rk\u22122 + \u00b7 \u00b7 \u00b7 +  x 1 r +  x 0 [Knut97]. </p> <p>Example: ( 410 ) five =  (?  ) ten</p> <p>\u8f6c\u6362\u6574\u6570\u90e8\u5206w</p> <p>\u6b65\u9aa4\uff1a\u6839\u636e\u516c\u5f0f \\(((\u00b7\u00b7\u00b7((x_{k\u22121} r + x_{k\u22122} )r + x_{k\u22123} )r +\u00b7\u00b7\u00b7)r + x_1 )r + x_0\\) \u91cd\u590d\u4e58\u4ee5 r\uff0c\u7136\u540e\u8fdb\u884c\u52a0\u6cd5\u3002</p> <p>\u7406\u7531\uff1a\u7ed9\u5b9a\u7684\u516c\u5f0f\u662f\u8457\u540d\u7684\u970d\u7eb3\u65b9\u6cd5\uff08\u6216\u89c4\u5219\uff09\uff0c\u9996\u6b21\u63d0\u51fa\u4e8e\u5341\u4e5d\u4e16\u7eaa\u521d\uff0c\u7528\u4e8e\u5bf9\\((k \u2212 1 )\\)\u6b21\u591a\u9879\u5f0f \\(x_{k\u22121} r^{k\u22121} + x_{k\u22122} r^{k\u22122} + \u00b7 \u00b7 \u00b7 + x_1 r + x_0\\) \u6c42\u503c [Knut97] \u3002</p> <p>\u793a\u4f8b\uff1a\\(( 410 )_{5} = (?)_{10}\\)</p> \\[ (( 4 \u00d7 5 ) + 1 ) \u00d7 5 + 0 = 105 \u21d2 ( 410 )_5 = ( 105 )_{10} \\] <p>Converting the fractional part v</p> <p>Procedure: Convert the integer  rl \u00d7  ( 0.  v)  and then divide by  rl  in the new radix. </p> <p>Justification: rl \u00d7  ( 0.  v)/rl = 0.  v</p> <p>Example: ( 410.220 33 ) five =  ( 105.?  ) ten ( 0.220 33 ) five \u00d7 55 =  ( 22 033 ) five =  ( 1518 ) ten 1518 / 55 = 1518 / 3125 = 0.485 76</p> <p>\u8f6c\u6362\u5c0f\u6570\u90e8\u5206 v</p> <p>\u8fc7\u7a0b\uff1a\u5c06\u6574\u6570 \\(r^l \u00d7 ( 0. v)\\) \u8f6c\u6362\uff0c\u7136\u540e\u9664\u4ee5\u65b0\u57fa\u6570\u4e2d\u7684 \\(r^l\\)\u3002</p> <p>\u7406\u7531\uff1a\\(r^l\u00d7(0.v)/r^l=0.v\\)</p> <p>\u793a\u4f8b\uff1a$ ( 410.220 33 ) = ( 105.? ){10} $</p> \\[ \\begin{array}{l} ( 0.220 33 )_5 \u00d7 5^5 = ( 22 033 )_5 = ( 1518 )_{10} \\\\  1518 / 5^5 = 1518 / 3125 = 0.485 76 \\end{array} \\] <p>From the above, we conclude that  ( 410.220 33 ) five =  ( 105.485 76 ) ten. </p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff1a( 410.220 33 )\\(_5\\) = ( 105.485 76 ) \\(_{10}\\)\u3002</p> <p>Note: Horner\u2019s method works here as well but is generally less practical. The digits of the fractional part are processed from right to left and the multiplication operation is replaced with division. Figure 1.3 shows how Horner\u2019s method can be applied to the preceding example. </p> <p>\u6ce8\u610f\uff1a\u970d\u7eb3\u7684\u65b9\u6cd5\u5728\u8fd9\u91cc\u4e5f\u9002\u7528\uff0c\u4f46\u901a\u5e38\u4e0d\u592a\u5b9e\u7528\u3002\u5c0f\u6570\u90e8\u5206\u7684\u6570\u5b57\u4ece\u53f3\u5411\u5de6\u5904\u7406\uff0c\u4e58\u6cd5\u8fd0\u7b97\u6539\u4e3a\u9664\u6cd5\u8fd0\u7b97\u3002\u56fe 1.3 \u663e\u793a\u4e86\u970d\u7eb3\u65b9\u6cd5\u5982\u4f55\u5e94\u7528\u4e8e\u524d\u9762\u7684\u793a\u4f8b\u3002</p> <p></p> <p>\u56fe 1.3 \u7528\u4e8e\u5c06 \\((.220 33 )_5\\) \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u7684\u970d\u7eb3\u89c4\u5219\u3002</p> <p>Shortcut method for  *r* =  *bg* and  *R* =  *bG*</p>"},{"location":"Part_01/01/#r-bg-r-bg","title":"\\(r = b^g\\) \u548c \\(R = b^G\\) \u7684\u5feb\u6377\u65b9\u6cd5","text":"<p>In the special case when the old and new radices are integral powers of a common base  b, that is,  r =  bg  and  R =  bG, one can convert from radix  r  to radix  b  and then from radix  b to radix  R. Both these conversions are quite simple and require virtually no computation. </p> <p>\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5f53\u65b0\u65e7\u57fa\u6570\u662f\u5171\u540c\u57fa\u6570 b \u7684\u6574\u6570\u5e42\u65f6\uff0c\u5373 \\(r = b^g\\) \u548c \\(R = b^G\\)\uff0c\u53ef\u4ee5\u4ece\u57fa\u6570 r \u8f6c\u6362\u4e3a\u57fa\u6570 b\uff0c\u7136\u540e\u4ece\u57fa\u6570 b \u8f6c\u6362\u4e3a\u57fa\u6570 R\u3002\u8fd9\u4e24\u79cd\u8f6c\u6362\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u51e0\u4e4e\u4e0d\u9700\u8981\u8ba1\u7b97\u3002</p> <p>To convert from the old radix  r =  bg  to radix  b, simply convert each radix- r digit individually into a  g-digit radix- b  number and then juxtapose the resulting  g-digit numbers. </p> <p>\u8981\u4ece\u65e7\u7684\u57fa\u6570 \\(r = b^g\\) \u8f6c\u6362\u4e3a\u57fa\u6570 b\uff0c\u53ea\u9700\u5c06\u6bcf\u4e2a\u57fa\u6570 r \u6570\u5b57\u5355\u72ec\u8f6c\u6362\u4e3a g \u4f4d\u57fa\u6570 b \u6570\u5b57\uff0c\u7136\u540e\u5c06\u6240\u5f97\u7684 g \u4f4d\u6570\u5b57\u5e76\u7f6e\u5373\u53ef\u3002</p> <p>To convert from radix  b  to the new radix  R =  bG, form  G-digit groups of the radix- b digits starting from the radix point (to the left and to the right). Then convert the  G-digit radix- b  number of each group into a single radix- R  digit and juxtapose the resulting digits. </p> <p>\u8981\u5c06\u57fa\u6570 b \u8f6c\u6362\u4e3a\u65b0\u7684\u57fa\u6570 \\(R = b^G\\)\uff0c\u8bf7\u4ece\u57fa\u6570\u70b9\u5f00\u59cb\uff08\u5411\u5de6\u548c\u5411\u53f3\uff09\u5f62\u6210\u57fa\u6570 b \u6570\u5b57\u7684 G \u4f4d\u6570\u5b57\u7ec4\u3002\u7136\u540e\u5c06\u6bcf\u7ec4\u7684 G \u4f4d\u57fa\u6570 b \u6570\u8f6c\u6362\u4e3a\u5355\u4e2a\u57fa\u6570 R \u6570\uff0c\u5e76\u5c06\u6240\u5f97\u6570\u5b57\u5e76\u7f6e\u3002</p> <p>EXAMPLE 1.8 ( 2 301.302 ) four =  (?  ) eight We have 4 = 22 and 8 = 23. Thus, conversion through the intermediate radix 2 is used. </p> <p>Each radix-4 digit is independently replaced by a 2-bit radix-2 number. This is followed by 3-bit groupings of the resulting binary digits to find the radix-8 digits. </p> <p>\u793a\u4f8b1.8 ( 2 301.302 ) 4 = (?) 8 \u6211\u4eec\u67094 = 22 \u548c8 = 23\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u901a\u8fc7\u4e2d\u95f4\u57fa\u65702 \u8fdb\u884c\u7684\u8f6c\u6362\u3002</p> <p>\u6bcf\u4e2a radix-4 \u6570\u5b57\u72ec\u7acb\u5730\u66ff\u6362\u4e3a 2 \u4f4d radix-2 \u6570\u5b57\u3002\u63a5\u4e0b\u6765\u662f\u5bf9\u6240\u5f97\u4e8c\u8fdb\u5236\u6570\u5b57\u8fdb\u884c 3 \u4f4d\u5206\u7ec4\u4ee5\u67e5\u627e\u57fa\u6570 8 \u6570\u5b57\u3002</p> \\[ \\begin{array}{l} (2 301.302)_4 &amp;= \\frac{(10}{2}\\frac{11}{3}\\frac{00}{0}\\frac{01}{1}\\frac{.11}{3}\\frac{00}{0}\\frac{10)}{2}\\text{two} \\\\ &amp;=\\frac{(10}{2}\\frac{110}{6}\\frac{001}{1}\\frac{.110}{6}\\frac{010)}{2}\\text{two} = (261.62)_{8} \\end{array} \\] <p>Clearly, when  g = 1 (G = 1 ), the first (second) step of the shortcut conversion procedure is eliminated. This corresponds to the special case of  R =  rG(r =  Rg). For example, conversions between radix 2 and radix 8 or 16 belong to these special cases. </p> <p>\u663e\u7136\uff0c\u5f53g=1\uff08G=1\uff09\u65f6\uff0c\u5feb\u6377\u8f6c\u6362\u8fc7\u7a0b\u7684\u7b2c\u4e00\uff08\u6216\u7b2c\u4e8c\uff09\u6b65\u9aa4\u88ab\u6d88\u9664\u3002\u8fd9\u5bf9\u5e94\u4e8e \\(R = r^G\\)(\\(r = R^g\\)) \u7684\u7279\u6b8a\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u57fa\u6570 2 \u548c\u57fa\u6570 8 \u6216 16 \u4e4b\u95f4\u7684\u8f6c\u6362\u5c31\u5c5e\u4e8e\u8fd9\u4e9b\u7279\u6b8a\u60c5\u51b5\u3002</p> <p>1.6 CLASSES OF NUMBER REPRESENTATIONS</p>"},{"location":"Part_01/01/#16","title":"1.6 \u6570\u5b57\u8868\u793a\u7684\u7c7b\u522b","text":"<p>In Sections 1.4 and 1.5, we considered the representation of unsigned fixed-point numbers using fixed-radix number systems, with standard and nonstandard digit sets, as well as methods for converting between such representations with standard digit sets. In digital computations, we also deal with signed fixed-point numbers as well as signed and unsigned real values. Additionally, we may use unconventional representations for the purpose of speeding up arithmetic operations or increasing their accuracy. Understanding different ways of representing numbers, including their relative cost-performance benefits and conversions between various representations, is an important prerequisite for designing efficient arithmetic algorithms or circuits. </p> <p>\u5728\u7b2c 1.4 \u8282\u548c\u7b2c 1.5 \u8282\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u4e86\u4f7f\u7528\u56fa\u5b9a\u57fa\u6570\u7cfb\u7edf\u3001\u6807\u51c6\u548c\u975e\u6807\u51c6\u6570\u5b57\u96c6\u6765\u8868\u793a\u65e0\u7b26\u53f7\u5b9a\u70b9\u6570\uff0c\u4ee5\u53ca\u5728\u8fd9\u79cd\u8868\u793a\u4e0e\u6807\u51c6\u6570\u5b57\u96c6\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u7684\u65b9\u6cd5\u3002\u5728\u6570\u5b57\u8ba1\u7b97\u4e2d\uff0c\u6211\u4eec\u8fd8\u5904\u7406\u5e26\u7b26\u53f7\u7684\u5b9a\u70b9\u6570\u4ee5\u53ca\u5e26\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u7684\u5b9e\u6570\u503c\u3002\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4f7f\u7528\u975e\u5e38\u89c4\u8868\u793a\u6765\u52a0\u901f\u7b97\u672f\u8fd0\u7b97\u6216\u63d0\u9ad8\u5176\u51c6\u786e\u6027\u3002\u4e86\u89e3\u8868\u793a\u6570\u5b57\u7684\u4e0d\u540c\u65b9\u5f0f\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u76f8\u5bf9\u6027\u4ef7\u6bd4\u4f18\u52bf\u4ee5\u53ca\u5404\u79cd\u8868\u793a\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u662f\u8bbe\u8ba1\u9ad8\u6548\u7b97\u672f\u7b97\u6cd5\u6216\u7535\u8def\u7684\u91cd\u8981\u5148\u51b3\u6761\u4ef6\u3002</p> <p>In the next three chapters, we will review techniques for representing fixed-point numbers, beginning with conventional methods and then moving on to some unconventional representations. </p> <p>\u5728\u63a5\u4e0b\u6765\u7684\u4e09\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u56de\u987e\u8868\u793a\u5b9a\u70b9\u6570\u7684\u6280\u672f\uff0c\u4ece\u4f20\u7edf\u65b9\u6cd5\u5f00\u59cb\uff0c\u7136\u540e\u8f6c\u5411\u4e00\u4e9b\u975e\u5e38\u89c4\u7684\u8868\u793a\u3002</p> <p>Signed fixed-point numbers, including various ways of representing and handling the sign information, are covered in Chapter 2. Signed-magnitude, biased, and complement representations (including both 1\u2019s and 2\u2019s complement) are covered in some detail. </p> <p>\u7b2c 2 \u7ae0\u4ecb\u7ecd\u4e86\u6709\u7b26\u53f7\u5b9a\u70b9\u6570\uff0c\u5305\u62ec\u8868\u793a\u548c\u5904\u7406\u7b26\u53f7\u4fe1\u606f\u7684\u5404\u79cd\u65b9\u5f0f\u3002\u8fd8\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6709\u7b26\u53f7\u6570\u503c\u3001\u504f\u7f6e\u548c\u8865\u7801\u8868\u793a\uff08\u5305\u62ec 1 \u548c 2 \u7684\u8865\u7801\uff09\u3002</p> <p>The signed-digit number systems of Chapter 3 can also be viewed as methods for representing signed numbers, although their primary significance lies in the redundancy that allows addition without carry propagation. The material in Chapter 3 is essential for understanding several speedup methods in multiplication, division, and function evaluation. </p> <p>\u7b2c 3 \u7ae0\u7684\u6709\u7b26\u53f7\u6570\u5b57\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u88ab\u89c6\u4e3a\u8868\u793a\u6709\u7b26\u53f7\u6570\u65b9\u6cd5\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u4e3b\u8981\u610f\u4e49\u5728\u4e8e\u5141\u8bb8\u52a0\u6cd5\u800c\u65e0\u9700\u8fdb\u4f4d\u4f20\u64ad\u7684\u5197\u4f59\u3002\u7b2c 3 \u7ae0\u4e2d\u7684\u6750\u6599\u5bf9\u4e8e\u7406\u89e3\u4e58\u6cd5\u3001\u9664\u6cd5\u548c\u51fd\u6570\u6c42\u503c\u4e2d\u7684\u51e0\u79cd\u52a0\u901f\u65b9\u6cd5\u81f3\u5173\u91cd\u8981\u3002</p> <p>Chapter 4 introduces residue number systems (for representing unsigned or signed integers) that allow some arithmetic operations to be performed in a truly parallel fashion at very high speed. Unfortunately, the difficulty of division and certain other arithmetic operations renders these number systems unsuitable for general applications. In Chapter 4, we also use residue representations to explore the limits of fast arithmetic. </p> <p>\u7b2c 4 \u7ae0\u4ecb\u7ecd\u4e86\u5269\u4f59\u6570\u7cfb\u7edf\uff08\u7528\u4e8e\u8868\u793a\u65e0\u7b26\u53f7\u6216\u6709\u7b26\u53f7\u6574\u6570\uff09\uff0c\u8be5\u7cfb\u7edf\u5141\u8bb8\u4ee5\u771f\u6b63\u5e76\u884c\u7684\u65b9\u5f0f\u4ee5\u975e\u5e38\u9ad8\u7684\u901f\u5ea6\u6267\u884c\u67d0\u4e9b\u7b97\u672f\u8fd0\u7b97\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u9664\u6cd5\u548c\u67d0\u4e9b\u5176\u4ed6\u7b97\u672f\u8fd0\u7b97\u7684\u56f0\u96be\u4f7f\u5f97\u8fd9\u4e9b\u6570\u5b57\u7cfb\u7edf\u4e0d\u9002\u5408\u4e00\u822c\u5e94\u7528\u3002\u5728\u7b2c 4 \u7ae0\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u7559\u6570\u8868\u793a\u6765\u63a2\u7d22\u5feb\u901f\u7b97\u672f\u7684\u5c40\u9650\u6027\u3002</p> <p>Representation of real numbers can take different forms. Examples include slash number systems (for representing rational numbers), logarithmic number systems (for representing real values), and of course, floating-point numbers that constitute the primary noninteger data format in modern digital systems. These representations are discussed in Chapter 17 (introductory chapter of Part V), immediately before we deal with algorithms, hardware implementations, and error analyses for real-number arithmetic. </p> <p>\u5b9e\u6570\u7684\u8868\u793a\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u5f62\u5f0f\u3002\u793a\u4f8b\u5305\u62ec\u659c\u6760\u6570\u5b57\u7cfb\u7edf\uff08\u7528\u4e8e\u8868\u793a\u6709\u7406\u6570\uff09\u3001\u5bf9\u6570\u6570\u5b57\u7cfb\u7edf\uff08\u7528\u4e8e\u8868\u793a\u5b9e\u6570\u503c\uff09\uff0c\u5f53\u7136\u8fd8\u6709\u6784\u6210\u73b0\u4ee3\u6570\u5b57\u7cfb\u7edf\u4e2d\u4e3b\u8981\u975e\u6574\u6570\u6570\u636e\u683c\u5f0f\u7684\u6d6e\u70b9\u6570\u3002\u5728\u6211\u4eec\u8ba8\u8bba\u5b9e\u6570\u7b97\u672f\u7684\u7b97\u6cd5\u3001\u786c\u4ef6\u5b9e\u73b0\u548c\u8bef\u5dee\u5206\u6790\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u5728\u7b2c 17 \u7ae0\uff08\u7b2c\u4e94\u90e8\u5206\u7684\u4ecb\u7ecd\u6027\u7ae0\u8282\uff09\u4e2d\u8ba8\u8bba\u8fd9\u4e9b\u8868\u793a\u5f62\u5f0f\u3002</p> <p>By combining features from two or more of the aforementioned \u201cpure\u201d representations, we can obtain many hybrid schemes. Examples include hybrid binary/signed-digit (see Section 3.4), hybrid residue/binary (see Section 4.5), hybrid logarithmic/signed-digit (see Section 17.6), and hybrid floating-point/logarithmic (see Problem 17.16) representations. </p> <p>\u901a\u8fc7\u7ec4\u5408\u6765\u81ea\u4e24\u4e2a\u6216\u591a\u4e2a\u4e0a\u8ff0\u201c\u7eaf\u201d\u4ee3\u8868\u7684\u7279\u5f81, \u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u8bb8\u591a\u6df7\u5408\u65b9\u6848\u3002\u793a\u4f8b\u5305\u62ec\u6df7\u5408\u4e8c\u8fdb\u5236/\u7b26\u53f7\u6570\u5b57\uff08\u53c2\u89c1\u7b2c 3.4 \u8282\uff09\u3001\u6df7\u5408\u7559\u6570/\u4e8c\u8fdb\u5236\uff08\u53c2\u89c1\u7b2c 4.5 \u8282\uff09\u3001\u6df7\u5408\u5bf9\u6570/\u7b26\u53f7\u6570\u5b57\uff08\u53c2\u89c1\u7b2c 17.6 \u8282\uff09\u548c\u6df7\u5408\u6d6e\u70b9/\u5bf9\u6570\uff08\u53c2\u89c1\u95ee\u9898 17.16\uff09\u8868\u793a\u3002</p> <p>This is a good place to introduce a notational tool, that we will find quite useful throughout the book. The established dot notation uses heavy dots to represent standard or positively-weighted bits, which we may call posibits. For example, Fig. 1.4a represents the addition of two 4-bit unsigned binary numbers whose posibits have weights \\(1\u30012\u30012^2\\) and \\(2^3\\), from right to left, and whose sum is a 5-bit number. Figure 1.4b depicts the pencil-and-paper algorithm for multiplying two 4-bit unsigned binary numbers, producing four partial products and then adding them, with proper alignments, to derive the 8-bit final result. We will see later that negatively weighted bits, or negabits, are also quite useful, prompting us to introduce the extended dot notation (see Section 2.6). </p> <p>\u8fd9\u662f\u4ecb\u7ecd\u7b26\u53f7\u5de5\u5177\u7684\u597d\u5730\u65b9\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u5728\u6574\u672c\u4e66\u4e2d\u975e\u5e38\u6709\u7528\u3002\u65e2\u5b9a\u7684\u70b9\u8868\u793a\u6cd5\u4f7f\u7528\u7c97\u70b9\u6765\u8868\u793a\u6807\u51c6\u6216\u6b63\u52a0\u6743\u4f4d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u79f0\u4e3a posibits\u3002\u4f8b\u5982\uff0c\u56fe1.4a\u8868\u793a\u4e24\u4e2a4\u4f4d\u65e0\u7b26\u53f7\u4e8c\u8fdb\u5236\u6570\u7684\u76f8\u52a0\uff0c\u5176\u4f4d\u7f6e\u4f4d\u7684\u6743\u91cd\u4ece\u53f3\u5230\u5de6\u5206\u522b\u4e3a\\(1\u30012\u30012^2\\)\u548c\\(2^3\\)\uff0c\u5176\u548c\u4e3a5\u4f4d\u6570\u3002\u56fe1.4b \u63cf\u8ff0\u4e86\u7eb8\u7b14\u7b97\u6cd5\uff0c\u7528\u4e8e\u5c06\u4e24\u4e2a 4 \u4f4d\u65e0\u7b26\u53f7\u4e8c\u8fdb\u5236\u6570\u76f8\u4e58\uff0c\u4ea7\u751f\u56db\u4e2a\u90e8\u5206\u79ef\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u76f8\u52a0\uff0c\u5e76\u8fdb\u884c\u9002\u5f53\u7684\u5bf9\u9f50\uff0c\u4ee5\u83b7\u5f97 8 \u4f4d\u6700\u7ec8\u7ed3\u679c\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u8d1f\u6743\u91cd\u4f4d\u6216\u8d1f\u4f4d\u4e5f\u975e\u5e38\u6709\u7528\uff0c\u4fc3\u4f7f\u6211\u4eec\u5f15\u5165\u6269\u5c55\u70b9\u8868\u793a\u6cd5\uff08\u53c2\u89c1\u7b2c 2.6 \u8282\uff09\u3002</p> <p></p> <p>A final point before we conclude this chapter: You can be a proficient arithmetic designer knowing only the following three key number representation systems and their properties:</p> <ul> <li> <p>2\u2019s-complement format (Section 2.4)</p> </li> <li> <p>Binary stored-carry or carry-save format (Section 3.2)</p> </li> <li> <p>Binary floating-point format (Chapter 17)</p> </li> </ul> <p>\u5728\u7ed3\u675f\u672c\u7ae0\u4e4b\u524d\uff0c\u6700\u540e\u4e00\u70b9\u662f\uff1a\u60a8\u53ef\u4ee5\u6210\u4e3a\u4e00\u540d\u719f\u7ec3\u7684\u7b97\u672f\u8bbe\u8ba1\u8005\uff0c\u53ea\u9700\u4e86\u89e3\u4ee5\u4e0b\u4e09\u4e2a\u5173\u952e\u6570\u5b57\u8868\u793a\u7cfb\u7edf\u53ca\u5176\u5c5e\u6027\uff1a</p> <ul> <li>2 \u7684\u8865\u7801\u683c\u5f0f\uff08\u7b2c 2.4 \u8282\uff09</li> <li>\u4e8c\u8fdb\u5236\u5b58\u50a8\u8fdb\u4f4d\u6216\u8fdb\u4f4d\u4fdd\u5b58\u683c\u5f0f\uff08\u7b2c 3.2 \u8282\uff09</li> <li>\u4e8c\u8fdb\u5236\u6d6e\u70b9\u683c\u5f0f\uff08\u7b2c 17 \u7ae0\uff09</li> </ul> <p>All the other formats, discussed in Chapters 2-4, are useful for optimizing application-specific designs or to gain a deeper understanding of the issues involved, but you can ignore them with no serious harm. There are indications, however, that decimal arithmetic may regain the importance it once had, because it avoids errors in the conversion between human-readable numbers and their machine representations.</p> <p>\u7b2c 2~4 \u7ae0\u4e2d\u8ba8\u8bba\u7684\u6240\u6709\u5176\u4ed6\u683c\u5f0f\u5bf9\u4e8e\u4f18\u5316\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u6216\u6df1\u5165\u4e86\u89e3\u6240\u6d89\u53ca\u7684\u95ee\u9898\u5f88\u6709\u7528\uff0c\u4f46\u60a8\u53ef\u4ee5\u5ffd\u7565\u5b83\u4eec\uff0c\u4e0d\u4f1a\u9020\u6210\u4e25\u91cd\u635f\u5bb3\u3002\u7136\u800c\uff0c\u6709\u8ff9\u8c61\u8868\u660e\uff0c\u5341\u8fdb\u5236\u7b97\u672f\u53ef\u80fd\u4f1a\u6062\u590d\u5176\u66fe\u7ecf\u7684\u91cd\u8981\u6027\uff0c\u56e0\u4e3a\u5b83\u907f\u514d\u4e86\u4eba\u7c7b\u53ef\u8bfb\u6570\u5b57\u4e0e\u5176\u673a\u5668\u8868\u793a\u4e4b\u95f4\u7684\u8f6c\u6362\u9519\u8bef\u3002</p>"},{"location":"Part_01/01/#_1","title":"\u95ee\u9898","text":""},{"location":"Part_01/01/#_2","title":"\u53c2\u8003\u6587\u732e\u548c\u8fdb\u4e00\u6b65\u9605\u8bfb","text":"<pre><code>[Dimi03]    Dimitrov, V. S., and G. A. Jullien, \u201cLoading the Bases: A New Number Representation\n            with Applications,\u201d IEEE Circuits and Systems, Vol. 3, No. 2, pp. 6\u201323, 2003.\n[GAO92]     General Accounting Office, \u201cPatriot Missile Defense: Software Problem Led to\n            System Failure at Dhahran, Saudi Arabia,\u201d US Government Report\n            GAO/IMTEC-92-26, 1992.\n[Knut97]    Knuth, D. E., The Art of Computer Programming, 3rd ed., Vol. 2: Seminumerical\n            Algorithms, Addison-Wesley, 1997.\n[Lion96]    Lions, J. L., \u201cAriane 5 Flight 505 Failure,\u201d Report by the Inquiry Board, July 19, 1996.\n[Loh02]     Loh, E., and G. W. Walster, \u201cRump\u2019s Example Revisited,\u201d Reliable Computing, Vol.\n            8, pp. 245\u2013248, 2002.\n[Mole95]    Moler, C., \u201cA Tale of Two Numbers,\u201d SIAM News, Vol. 28, No. 1, pp. 1, 16, 1995.\n[Parh92]    Parhami, B., \u201cSystolic Number Radix Converters,\u201d Computer J., Vol. 35, No. 4, pp.\n            405\u2013409, August 1992.\n[Parh02]    Parhami, B., \u201cNumber Representation and Computer Arithmetic,\u201d Encyclopedia of\n            Information Systems, Academic Press, Vol. 3, pp. 317\u2013333, 2002.\n[Scot85]    Scott, N. R., Computer Number Systems and Arithmetic, Prentice-Hall, 1985.\n[Silv06]    Silverman, J. H., A Friendly Introduction to Number Theory, Pearson, 2006.\n[Stol04]    Stoll, C., \u201cThe Curious History of the First Pocket Calculator,\u201dScientific American,\n            Vol. 290, No. 1, pp. 92\u201399, January 2004.\n[Thim95]    Thimbleby, H., \u201cA New Calculator and Why It Is Necessary,\u201d Computer J., Vol. 38,\n            No. 6, pp. 418\u2013433, 1995.\n</code></pre>"},{"location":"Part_01/02/","title":"2. \u6709\u7b26\u53f7\u6570\u7684\u8868\u793a","text":""},{"location":"Part_02/","title":"Part II","text":""}]}